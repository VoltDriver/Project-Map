<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VisualArrays</name>
    </assembly>
    <members>
        <member name="T:VisualArrays.AppearanceConverter">
            <summary>
            Permet la convertion des éléments
            </summary>
        </member>
        <member name="T:VisualArrays.ColumnHeaderAppearance">
            <summary>
            Fournit les informations concernant l'apparence de l'en-tête des colonnes
            </summary>
        </member>
        <member name="M:VisualArrays.ColumnHeaderAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un ColumnHeaderAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.Font">
            <summary>
            Obtient ou définit la police pour l'en-tête des colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.ForeColor">
            <summary>
            Obtient ou définit la couleur du texte pour l'en-tête des colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.BackgroundColor">
            <summary>
            Obtient ou définit la couleur de fond des cellules d'en-tête de colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.Style">
            <summary>
            Obtient ou définit le style de fond des cellules d'en-tête de colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.Height">
            <summary>
            Obtient ou définit la hauteur de l'en-tête des colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.ValueStyle">
            <summary>
            Obtient ou définit le style du contenu de l'en-tête des colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.ColumnHeaderAppearance.Visible">
            <summary>
            Indique si l'en-tête est visible ou non
            </summary>
        </member>
        <member name="T:VisualArrays.StrikeAppearance">
            <summary>
            Fournit les informations concernant l'apparence du Strike
            </summary>
        </member>
        <member name="F:VisualArrays.StrikeAppearance.m_owner">
            <summary>
            VisualArray qui possède cette instance
            </summary>
        </member>
        <member name="M:VisualArrays.StrikeAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un StrikeAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire</param>
        </member>
        <member name="F:VisualArrays.StrikeAppearance.m_align">
            <summary>
            Obtient et définit l'alignement de l'image du Strike.
            </summary>
        </member>
        <member name="P:VisualArrays.StrikeAppearance.Style">
            <summary>
            Obtient et définit le style du trait du Strike
            </summary>
        </member>
        <member name="P:VisualArrays.StrikeAppearance.Color">
            <summary>
            Obtient et définit la couleur du trait du Strike.
            </summary>
        </member>
        <member name="P:VisualArrays.StrikeAppearance.PenWidth">
            <summary>
            Obtient ou définit la taille du crayon utilisé pour dessiner le trait du Strike
            </summary>
        </member>
        <member name="P:VisualArrays.StrikeAppearance.Margin">
            <summary>
            Obtient ou définit la marge appliquée au trait
            </summary>
        </member>
        <member name="P:VisualArrays.StrikeAppearance.Image">
            <summary>
            Obtient et définit l'image du trait lorsque le Style du Strike est Image
            </summary>
        </member>
        <member name="P:VisualArrays.StrikeAppearance.Align">
            <summary>
            Obtient et définit l'alignement de l'image du Strike.
            </summary>
        </member>
        <member name="T:VisualArrays.VBACellAppearance">
            <summary>
            Fournit les informations concernant l'apparence des cellules dont l'état Enabled est true
            </summary>
        </member>
        <member name="T:VisualArrays.IBackgroundAppearance">
            <summary>
            Définit les éléments nécessaires pour contrôler l'apparence du fond des cellules
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.Radius">
            <summary>
            Obtient et définit la radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.Shape">
            <summary>
            Obtient et définit la forme utilisée pour dessiner le fond de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.Image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.PenWidth">
            <summary>
            Obtient et définit la taille du crayon pour dessiner une forme contour.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.Style">
            <summary>
            Obtient et définit le style de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures autour des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.IBackgroundAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de fond des cellules.
            </summary>
        </member>
        <member name="F:VisualArrays.VBACellAppearance.m_owner">
            <summary>
            Initialise un BackgroundAppearance object
            </summary>
        </member>
        <member name="M:VisualArrays.VBACellAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un VBACellAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="F:VisualArrays.VBACellAppearance.m_image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.Shape">
            <summary>
            Obtient et définit la forme utilisée pour dessiner le fond de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.Image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.PenWidth">
            <summary>
            Obtient et définit la taille du crayon pour dessiner une forme contour.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.Style">
            <summary>
            Obtient et définit le style de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures autour des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VBACellAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualBoolAppearance">
            <summary>
            Fournit les informations concernant l'apparence des cellules dont l'état Enabled est true
            </summary>
        </member>
        <member name="F:VisualArrays.VisualBoolAppearance.m_owner">
            <summary>
            Initialise un BackgroundAppearance object
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolAppearance.#ctor(VisualArrays.VisualCells.VisualValue{System.Boolean})">
            <summary>
            Initialise un VisualBoolAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="F:VisualArrays.VisualBoolAppearance.va_trueAppearance">
            <summary>
            Détermine différents aspects de l'apparence lorsque l'état est true
            </summary>
        </member>
        <member name="F:VisualArrays.VisualBoolAppearance.va_falseAppearance">
            <summary>
            Détermine différents aspects de l'apparence lorsque l'état est false
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolAppearance.True">
            <summary>
            Détermine différents aspects de l'apparence lorsque l'état est true
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolAppearance.False">
            <summary>
            Détermine différents aspects de l'apparence lorsque l'état est false
            </summary>
        </member>
        <member name="T:VisualArrays.DragAppearance">
            <summary>
            Fournit les informations concernant l'apparence de la sélection
            </summary>
        </member>
        <member name="P:VisualArrays.DragAppearance.Padding">
            <summary>
            Obtient et définit l'espacement entre la cellule et la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.DragAppearance.Image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.DragAppearance.Alpha">
            <summary>
            Obtient ou définit la transparence appliquée sur la destination.
            </summary>
        </member>
        <member name="P:VisualArrays.DragAppearance.Style">
            <summary>
            Obtient ou définit le style de fond de la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.DragAppearance.Shape">
            <summary>
            Obtient ou définit la forme utilisée pour représenter la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.DragAppearance.PenWidth">
            <summary>
            Obtient ou définit l'épaisseur du crayon utilisé pour dessiner la forme.
            </summary>
        </member>
        <member name="P:VisualArrays.DragAppearance.Color">
            <summary>
            Obtient ou définit la couleur de la forme utilisée pour représenter la destination.
            </summary>
        </member>
        <member name="P:VisualArrays.DragAppearance.ShowSource">
            <summary>
            Obtient ou définit si on doit mettre en évidence la cellule source de l'opération glisser/déposer.
            </summary>
        </member>
        <member name="P:VisualArrays.DragAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.VGDisabledAppearance`1">
            <summary>
            Fournit les informations concernant l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="T:VisualArrays.DisabledAppearance">
            <summary>
            Fournit les informations concernant l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="F:VisualArrays.DisabledAppearance.m_owner">
            <summary>
            VisualArray qui possède cette instance
            </summary>
        </member>
        <member name="M:VisualArrays.DisabledAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un DisabledAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire</param>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures autour d'une cellule Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de la forme ou de la bordure d'une cellule Enabled false.
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.Image">
            <summary>
            Obtient ou définit l'image affichée derrière une cellule Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.Shape">
            <summary>
            Obtient ou définit la forme dessinée derrière une cellule Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.PenWidth">
            <summary>
            Obtient ou définit la taille du crayon utilisé pour dessiner la forme derrière une cellule Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.Style">
            <summary>
            Obtient et définit le style de fond pour une cellule Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="P:VisualArrays.DisabledAppearance.StrikeAppearance">
            <summary>
            Obtient et définit différents spects de l'apparence du Strike.
            </summary>
        </member>
        <member name="M:VisualArrays.VGDisabledAppearance`1.#ctor(VisualArrays.VisualValueArray{`0})">
            <summary>
            Initialise un SpecialValueAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire</param>
        </member>
        <member name="F:VisualArrays.VGDisabledAppearance`1.m_imageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.VGDisabledAppearance`1.ImageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.VGDisabledAppearance`1.TextColor">
            <summary>
            Obtient et définit la couleur de la valeur d'une cellule Enabled false.
            </summary>
        </member>
        <member name="P:VisualArrays.VGDisabledAppearance`1.Font">
            <summary>
            Obtient ou définit la police utilisée pour afficher la valeur d'une cellule Enabled false.
            </summary>
        </member>
        <member name="P:VisualArrays.VGDisabledAppearance`1.ShowValue">
            <summary>
            Indique si la valeur doit être affichée lorsque la cellule est Enabled false
            </summary>
        </member>
        <member name="P:VisualArrays.VGDisabledAppearance`1.ImageBrightness">
            <summary>
            Obtient et définit une valeur entre 0 et 1 controlant la brillance
            </summary>
        </member>
        <member name="T:VisualArrays.VGCellAppearance`1">
            <summary>
            Fournit les informations concernant l'apparence des cellules dont l'état Enabled est true
            </summary>
        </member>
        <member name="F:VisualArrays.VGCellAppearance`1.m_owner">
            <summary>
            Initialise un BackgroundAppearance object
            </summary>
        </member>
        <member name="M:VisualArrays.VGCellAppearance`1.#ctor(VisualArrays.VisualValueArray{`0})">
            <summary>
            Initialise un VGCellAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="F:VisualArrays.VGCellAppearance`1.m_imageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="F:VisualArrays.VGCellAppearance`1.m_image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance`1.Font">
            <summary>
            Obtient ou définit la police utilisée pour afficher les valeurs.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance`1.TextColor">
            <summary>
            Obtient et définit la couleur du texte dans les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance`1.Padding">
            <summary>
            Obtient et définit l'espacement interne entre le texte et le contour de la cellule.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance`1.ImageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance`1.Shape">
            <summary>
            Obtient et définit la forme utilisée pour dessiner le fond de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance`1.Image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance`1.PenWidth">
            <summary>
            Obtient et définit la taille du crayon pour dessiner une forme contour.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance`1.Style">
            <summary>
            Obtient et définit le style de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance`1.Border">
            <summary>
            Obtient et définit la taille des bordures autour des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance`1.BackgroundColor">
            <summary>
            Obtient et définit la couleur de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VGCellAppearance`1.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.VBASpecialValueAppearance`1">
            <summary>
            Fournit les informations concernant l'apparence de la valeur spéciale de la grille
            </summary>
        </member>
        <member name="F:VisualArrays.VBASpecialValueAppearance`1.m_owner">
            <summary>
            VisualArray qui possède cette instance
            </summary>
        </member>
        <member name="M:VisualArrays.VBASpecialValueAppearance`1.#ctor(VisualArrays.VisualValueArray{`0})">
            <summary>
            Initialise un SpecialValueAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire</param>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance`1.Border">
            <summary>
            Obtient et définit la taille des bordures pour la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance`1.BackgroundColor">
            <summary>
            Obtient et définit la couleur de la forme ou de la bordure sous la valeur spéciale.
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance`1.Enabled">
            <summary>
            Indique si la cellule doit se comporter comme une cellule inactive lorsqu'elle contient la SpecialValue
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance`1.Image">
            <summary>
            Obtient ou définit l'image affichée derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance`1.Shape">
            <summary>
            Obtient ou définit la forme dessinée derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance`1.PenWidth">
            <summary>
            Obtient ou définit la taille du crayon utilisé pour dessiner la forme derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance`1.Style">
            <summary>
            Obtient et définit le style de fond des cellules contenant void.
            </summary>
        </member>
        <member name="P:VisualArrays.VBASpecialValueAppearance`1.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualBoolValueAppearance">
            <summary>
            Fournit les informations concernant l'apparence.
            </summary>
        </member>
        <member name="F:VisualArrays.VisualBoolValueAppearance.m_owner">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolValueAppearance.#ctor(VisualArrays.VisualCells.VisualValue{System.Boolean})">
            <summary>
            Initialise un VisualBoolValueAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="F:VisualArrays.VisualBoolValueAppearance.m_image">
            <summary>
            Obtient ou définit l'image de fond.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolValueAppearance.Shape">
            <summary>
            Obtient et définit la forme utilisée pour dessiner le fond.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolValueAppearance.Image">
            <summary>
            Obtient ou définit l'image de fond.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolValueAppearance.PenWidth">
            <summary>
            Obtient et définit la taille du crayon pour dessiner une forme contour.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolValueAppearance.Style">
            <summary>
            Obtient et définit le style de fond.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolValueAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolValueAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de fond.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolValueAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.SpecialValueAppearance`1">
            <summary>
            Fournit les informations concernant l'apparence de la valeur spéciale de la grille
            </summary>
        </member>
        <member name="F:VisualArrays.SpecialValueAppearance`1.m_owner">
            <summary>
            VisualArray qui possède cette instance
            </summary>
        </member>
        <member name="M:VisualArrays.SpecialValueAppearance`1.#ctor(VisualArrays.VisualValueArray{`0})">
            <summary>
            Initialise un SpecialValueAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire</param>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance`1.TextColor">
            <summary>
            Obtient et définit la couleur du texte de la valeur spéciale.
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance`1.Font">
            <summary>
            Obtient ou définit la police utilisée pour afficher la valeur spéciale.
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance`1.ShowValue">
            <summary>
            Indique si la valeur spéciale doit être affiché
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance`1.Enabled">
            <summary>
            Indique si la cellule doit se comporter comme une cellule active lorsqu'elle contient la SpecialValue
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance`1.Border">
            <summary>
            Obtient et définit la taille des bordures pour la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance`1.BackgroundColor">
            <summary>
            Obtient et définit la couleur de la forme ou de la bordure sous la valeur spéciale.
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance`1.Image">
            <summary>
            Obtient ou définit l'image affichée derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance`1.Shape">
            <summary>
            Obtient ou définit la forme dessinée derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance`1.PenWidth">
            <summary>
            Obtient ou définit la taille du crayon utilisé pour dessiner la forme derrière la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance`1.Style">
            <summary>
            Obtient et définit le style de fond des cellules contenant void.
            </summary>
        </member>
        <member name="P:VisualArrays.SpecialValueAppearance`1.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.GridAppearance">
            <summary>
            Fournit les informations concernant l'apparence du quadrillage de la grille
            </summary>
        </member>
        <member name="M:VisualArrays.GridAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un GridAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du GridAppearance</param>
        </member>
        <member name="P:VisualArrays.GridAppearance.Color">
            <summary>
            Obtient ou définit la couleur du quadrillage de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.GridAppearance.LineSize">
            <summary>
            Obtient ou définit l'épaisseur des lignes du quadrillage de la grille.
            </summary>
        </member>
        <member name="T:VisualArrays.RowHeaderAppearance">
            <summary>
            Fournit les informations concernant l'apparence de l'en-tête des rangées
            </summary>
        </member>
        <member name="M:VisualArrays.RowHeaderAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un RowHeaderAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.Font">
            <summary>
            Obtient ou définit la police pour l'en-tête des rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.ForeColor">
            <summary>
            Obtient ou définit la couleur du texte pour l'en-tête des rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.BackgroundColor">
            <summary>
            Obtient ou définit la couleur de fond des cellules d'en-tête de rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.Style">
            <summary>
            Obtient ou définit le style de fond des cellules d'en-tête de rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.Width">
            <summary>
            Obtient ou définit la largeur de l'en-tête des rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.ValueStyle">
            <summary>
            Obtient ou définit le style du contenu de l'en-tête des rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.RowHeaderAppearance.Visible">
            <summary>
            Indique si l'en-tête est visible ou non
            </summary>
        </member>
        <member name="T:VisualArrays.GraphAppearance">
            <summary>
            Fournit les informations concernant l'apparence en mode graphique
            </summary>
        </member>
        <member name="M:VisualArrays.GraphAppearance.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initialise un GraphAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarValueColor">
            <summary>
            Obtient ou définit la couleur utilisée pour la valeur de la barre du graphique
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarValueFont">
            <summary>
            Obtient ou définit la police utilisée pour la valeur de la barre du graphique
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarValueStyle">
            <summary>
            Obtient ou définit le style de la valeur affichée avec la barre.
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarMargin">
            <summary>
            Obtient ou définit la marge autour de la barre du graphique.
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarStyle">
            <summary>
            Obtient et définit le style de la barre du graphique.
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarColor">
            <summary>
            Obtient et définit la couleur de la barre du graphique
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarImage">
            <summary>
            Obtient ou définit l'image utilisée pour la barre du graphique.
            </summary>
        </member>
        <member name="P:VisualArrays.GraphAppearance.BarAlign">
            <summary>
            Obtient ou définit l'alignement de la barre.
            </summary>
        </member>
        <member name="T:VisualArrays.ISpriteOwner">
            <summary>
            10/02/2012
            PROBLÈMES : Impossible d'utiliser simplement les Sprites actuels avec une grille VisualContainer. 
            
                - La propriété DisplayAddress n'est pas compatible
                - Le code pour Sprite sur plusieurs cellules n'est pas compatible
                - Le SegmentSprite n'est pas compatible
            
            Définit les fonctionnalités que doit posséder une grille offrant des Sprites 
            </summary>
        </member>
        <member name="M:VisualArrays.ISpriteOwner.GetCellBounds(System.Int32)">
            <summary>
            Obtient le contour d'une cellule.
            </summary>
            <param name="pIndex">Index de la cellule</param>
            <returns>Contour d'une cellule</returns>
        </member>
        <member name="M:VisualArrays.ISpriteOwner.UpdateSprites(System.Drawing.Rectangle)">
            <summary>
            Force l'affichage de tous les Sprites touchés par le rectangle
            </summary>
            <param name="pBounds">Rectangle de la zone à mettre à jour</param>
        </member>
        <member name="T:VisualArrays.enuTypeElement">
            <summary>
            
            </summary>
        </member>
        <member name="T:VisualArrays.DragAndDropInfos">
            <summary>
            Représente les informations impliquées dans une opération glisser/déposer
            </summary>
        </member>
        <member name="F:VisualArrays.DragAndDropInfos.TypeElement">
            <summary>
            Type d'élément impliqué dans l'opération glisser/déposer
            </summary>
        </member>
        <member name="F:VisualArrays.DragAndDropInfos.SourceGridName">
            <summary>
            Nom de la grille source de l'opération glisser/déposer
            </summary>
        </member>
        <member name="F:VisualArrays.DragAndDropInfos.SourceIndex">
            <summary>
            Index source de l'opération glisser/déposer
            </summary>
        </member>
        <member name="F:VisualArrays.DragAndDropInfos.SourceRow">
            <summary>
            Rangée source de l'opération glisser/déposer
            </summary>
        </member>
        <member name="F:VisualArrays.DragAndDropInfos.SourceColumn">
            <summary>
            Colonne source de l'opération glisser/déposer
            </summary>
        </member>
        <member name="F:VisualArrays.DragAndDropInfos.DragSprite">
            <summary>
            Sprite source de l'opération glisser/déposer, null si c'est une cellule
            </summary>
        </member>
        <member name="M:VisualArrays.DragAndDropInfos.#ctor(VisualArrays.enuTypeElement,System.String,System.Int32,System.Int32,System.Int32,VisualArrays.Sprite)">
            <summary>
            Initialise un DragAndDropInfos
            </summary>
            <param name="pTypeElement"></param>
            <param name="pSourceGridName"></param>
            <param name="pSourceIndex"></param>
            <param name="pSourceRow"></param>
            <param name="pSourceColumn"></param>
            <param name="pDragSprite"></param>
        </member>
        <member name="T:DragDropLib.DataObject">
            <summary>
            Implements the COM version of IDataObject including SetData.
            </summary>
            <remarks>
            <para>Use this object when using shell (or other unmanged) features
            that utilize the clipboard and/or drag and drop.</para>
            <para>The System.Windows.DataObject (.NET 3.0) and
            System.Windows.Forms.DataObject do not support SetData from their COM
            IDataObject interface implementation.</para>
            <para>To use this object with .NET drag and drop, create an instance
            of System.Windows.DataObject (.NET 3.0) or System.Window.Forms.DataObject
            passing an instance of DataObject as the only constructor parameter. For
            example:</para>
            <code>
            System.Windows.DataObject data = new System.Windows.DataObject(new DragDropLib.DataObject());
            </code>
            </remarks>
        </member>
        <member name="M:DragDropLib.DataObject.#ctor">
            <summary>
            Creates an empty instance of DataObject.
            </summary>
        </member>
        <member name="M:DragDropLib.DataObject.Finalize">
            <summary>
            Releases unmanaged resources.
            </summary>
        </member>
        <member name="M:DragDropLib.DataObject.ClearStorage">
            <summary>
            Clears the internal storage array.
            </summary>
            <remarks>
            ClearStorage is called by the IDisposable.Dispose method implementation
            to make sure all unmanaged references are released properly.
            </remarks>
        </member>
        <member name="M:DragDropLib.DataObject.Dispose">
            <summary>
            Releases resources.
            </summary>
        </member>
        <member name="M:DragDropLib.DataObject.Dispose(System.Boolean)">
            <summary>
            Releases resources.
            </summary>
            <param name="disposing">Indicates if the call was made by a managed caller, or the garbage collector.
            True indicates that someone called the Dispose method directly. False indicates that the garbage collector
            is finalizing the release of the object instance.</param>
        </member>
        <member name="M:DragDropLib.DataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)">
            <summary>
            
            </summary>
            <param name="pFormatetc"></param>
            <param name="advf"></param>
            <param name="adviseSink"></param>
            <param name="connection"></param>
            <returns></returns>
        </member>
        <member name="M:DragDropLib.DataObject.DUnadvise(System.Int32)">
            <summary>
            
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:DragDropLib.DataObject.EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)">
            <summary>
            
            </summary>
            <param name="enumAdvise"></param>
            <returns></returns>
        </member>
        <member name="M:DragDropLib.DataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)">
            <summary>
            
            </summary>
            <param name="formatIn"></param>
            <param name="formatOut"></param>
            <returns></returns>
        </member>
        <member name="M:DragDropLib.DataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="medium"></param>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)">
            <summary>
            Gets an enumerator for the formats contained in this DataObject.
            </summary>
            <param name="direction">The direction of the data.</param>
            <returns>An instance of the IEnumFORMATETC interface.</returns>
        </member>
        <member name="M:DragDropLib.DataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            Gets the specified data.
            </summary>
            <param name="format">The requested data format.</param>
            <param name="medium">When the function returns, contains the requested data.</param>
        </member>
        <member name="M:DragDropLib.DataObject.QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)">
            <summary>
            Determines if data of the requested format is present.
            </summary>
            <param name="format">The request data format.</param>
            <returns>Returns the status of the request. If the data is present, S_OK is returned.
            If the data is not present, an error code with the best guess as to the reason is returned.</returns>
        </member>
        <member name="M:DragDropLib.DataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
            <summary>
            Sets data in the specified format into storage.
            </summary>
            <param name="formatIn">The format of the data.</param>
            <param name="medium">The data.</param>
            <param name="release">If true, ownership of the medium's memory will be transferred
            to this object. If false, a copy of the medium will be created and maintained, and
            the caller is responsible for the memory of the medium it provided.</param>
        </member>
        <member name="M:DragDropLib.DataObject.CopyMedium(System.Runtime.InteropServices.ComTypes.STGMEDIUM@)">
            <summary>
            Creates a copy of the STGMEDIUM structure.
            </summary>
            <param name="medium">The data to copy.</param>
            <returns>The copied data.</returns>
        </member>
        <member name="T:DragDropLib.DataObject.EnumFORMATETC">
            <summary>
            Helps enumerate the formats available in our DataObject class.
            </summary>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.#ctor(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.Runtime.InteropServices.ComTypes.FORMATETC,System.Runtime.InteropServices.ComTypes.STGMEDIUM}})">
            <summary>
            Creates an instance from a list of key value pairs.
            </summary>
            <param name="storage">List of FORMATETC/STGMEDIUM key value pairs</param>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.#ctor(System.Runtime.InteropServices.ComTypes.FORMATETC[])">
            <summary>
            Creates an instance from an array of FORMATETC's.
            </summary>
            <param name="formats">Array of formats to enumerate.</param>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.Clone(System.Runtime.InteropServices.ComTypes.IEnumFORMATETC@)">
            <summary>
            Creates a clone of this enumerator.
            </summary>
            <param name="newEnum">When this function returns, contains a new instance of IEnumFORMATETC.</param>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
            <summary>
            Retrieves the next elements from the enumeration.
            </summary>
            <param name="celt">The number of elements to retrieve.</param>
            <param name="rgelt">An array to receive the formats requested.</param>
            <param name="pceltFetched">An array to receive the number of element fetched.</param>
            <returns>If the fetched number of formats is the same as the requested number, S_OK is returned.
            There are several reasons S_FALSE may be returned: (1) The requested number of elements is less than
            or equal to zero. (2) The rgelt parameter equals null. (3) There are no more elements to enumerate.
            (4) The requested number of elements is greater than one and pceltFetched equals null or does not
            have at least one element in it. (5) The number of fetched elements is less than the number of
            requested elements.</returns>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.Reset">
            <summary>
            Resets the state of enumeration.
            </summary>
            <returns>S_OK</returns>
        </member>
        <member name="M:DragDropLib.DataObject.EnumFORMATETC.Skip(System.Int32)">
            <summary>
            Skips the number of elements requested.
            </summary>
            <param name="celt">The number of elements to skip.</param>
            <returns>If there are not enough remaining elements to skip, returns S_FALSE. Otherwise, S_OK is returned.</returns>
        </member>
        <member name="T:DragDropLib.DragDropHelper">
            <summary>
            
            </summary>
        </member>
        <member name="T:DragDropLib.IDragSourceHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:DragDropLib.IDragSourceHelper.InitializeFromBitmap(DragDropLib.ShDragImage@,System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>
            
            </summary>
            <param name="dragImage"></param>
            <param name="dataObject"></param>
        </member>
        <member name="M:DragDropLib.IDragSourceHelper.InitializeFromWindow(System.IntPtr,DragDropLib.Win32Point@,System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>
            
            </summary>
            <param name="hwnd"></param>
            <param name="pt"></param>
            <param name="dataObject"></param>
        </member>
        <member name="T:DragDropLib.IDropTargetHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:DragDropLib.IDropTargetHelper.DragEnter(System.IntPtr,System.Runtime.InteropServices.ComTypes.IDataObject,DragDropLib.Win32Point@,System.Int32)">
            <summary>
            
            </summary>
            <param name="hwndTarget"></param>
            <param name="dataObject"></param>
            <param name="pt"></param>
            <param name="effect"></param>
        </member>
        <member name="M:DragDropLib.IDropTargetHelper.DragLeave">
            <summary>
            
            </summary>
        </member>
        <member name="M:DragDropLib.IDropTargetHelper.DragOver(DragDropLib.Win32Point@,System.Int32)">
            <summary>
            
            </summary>
            <param name="pt"></param>
            <param name="effect"></param>
        </member>
        <member name="M:DragDropLib.IDropTargetHelper.Drop(System.Runtime.InteropServices.ComTypes.IDataObject,DragDropLib.Win32Point@,System.Int32)">
            <summary>
            
            </summary>
            <param name="dataObject"></param>
            <param name="pt"></param>
            <param name="effect"></param>
        </member>
        <member name="M:DragDropLib.IDropTargetHelper.Show(System.Boolean)">
            <summary>
            
            </summary>
            <param name="show"></param>
        </member>
        <member name="T:DragDropLib.Win32Point">
            <summary>
            
            </summary>
        </member>
        <member name="F:DragDropLib.Win32Point.x">
            <summary>
            
            </summary>
        </member>
        <member name="F:DragDropLib.Win32Point.y">
            <summary>
            
            </summary>
        </member>
        <member name="T:DragDropLib.Win32Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:DragDropLib.Win32Size.cx">
            <summary>
            
            </summary>
        </member>
        <member name="F:DragDropLib.Win32Size.cy">
            <summary>
            
            </summary>
        </member>
        <member name="T:DragDropLib.ShDragImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:DragDropLib.ShDragImage.sizeDragImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:DragDropLib.ShDragImage.ptOffset">
            <summary>
            
            </summary>
        </member>
        <member name="F:DragDropLib.ShDragImage.hbmpDragImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:DragDropLib.ShDragImage.crColorKey">
            <summary>
            
            </summary>
        </member>
        <member name="T:VisualArrays.IVisualArray`1">
            <summary>
            Définit des fonctionnalités communes pour une grille de cellules
            </summary>
        </member>
        <member name="E:VisualArrays.IVisualArray`1.CellMouseDown">
            <summary>
            Se produit lors d'un MouseDown dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.IVisualArray`1.CellMouseUp">
            <summary>
            Se produit lors d'un MouseDown dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.IVisualArray`1.CellMouseClick">
            <summary>
            Se produit lors d'un MouseClick dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.IVisualArray`1.CellMouseDoubleClick">
            <summary>
            Se produit lors d'un MouseDoubleClick dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.IVisualArray`1.CellMouseEnter">
            <summary>
            Se produit lorsque le pointeur de la souris entre dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.IVisualArray`1.CellMouseLeave">
            <summary>
            Se produit lorsque le pointeur de la souris quitte une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.IVisualArray`1.CellMouseMove">
            <summary>
            Se produit lorsque le pointeur de la souris se déplace sur une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.IVisualArray`1.Length">
            <summary>
            Fournit le nombre de cellules dans la grille
            </summary>
        </member>
        <member name="T:VisualArrays.SegmentSprite">
            <summary>
            Représente un 'Sprite' ayant la forme d'un segment partant d'une cellule vers une autre
            </summary>
        </member>
        <member name="T:VisualArrays.Sprite">
            <summary>
            Représente un objet visuel qui se déplace sur une grille
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.Hit(System.Drawing.Rectangle)">
            <summary>
            Détecte si un point est en collision avec le Sprite
            </summary>
            <param name="pRectangle">Rectangle à vérifier</param>
            <returns></returns>
        </member>
        <member name="F:VisualArrays.Sprite.m_tabCells">
            <summary>
            Liste des points qui composent le Sprite, si Count == 0 alors Sprite normal
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.AddCell(System.Int32,System.Int32)">
            <summary>
            Ajoute une cellule au Sprite, nécessaire seulement si le Sprite est déployé sur plusieurs cellules.
            Permet de créer un Sprite avec une forme irrégulière, par exemple un coude.
            </summary>
            <param name="pRowOffset">Déplacement en rangée par rapport à son DisplayAddress</param>
            <param name="pColumnOffset">Déplacement en colonne par rapport à son DisplayAddress </param>
        </member>
        <member name="M:VisualArrays.Sprite.OriginCenter(System.Drawing.Point)">
            <summary>
            Fournit la coordonnée du centre du point 0,0 de la zone du Sprite
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_bounds">
            <summary>
            Spécifie l'emplacement du Sprite dans la VisualArray en pixels
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_offsetX">
            <summary>
            Spécifie le déplacement horizontale en pixels à appliquer sur l'emplacement du Sprite
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_offsetY">
            <summary>
            Spécifie le déplacement verticale en pixels à appliquer sur l'emplacement du Sprite
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_alignment">
            <summary>
            Obtient ou définit l'alignement de l'élément sur une cellule.
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_alignOnGrid">
            <summary>
            Obtient ou définit si l'élément doit être aligné sur l'ensemble des cellules de la grille
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.RecalcBounds">
            <summary>
            Calcul le rectangle contour du Sprite en fonction de son alignement et de son DisplayIndex
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.RecalcBoundsAndRedraw">
            <summary>
            Calcul le rectangle contour du Sprite en fonction de son alignement et de son DisplayIndex.
            Cette version redessine le Sprite à une nouvelle position en tenant compte de la distance de son déplacement.
            Pour un petit déplacement une seule zone est redessinée autrement 2 zones sont redessinées
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_allowDrag">
            <summary>
            Obtient ou définit si le Sprite peut faire partie d'une opération glisser-déposer.
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_animated">
            <summary>
            Obtient ou définit si le déplacement du Sprite doit être animé ou non.
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_followGrid">
            <summary>
            Obtient ou définit si le Sprite doit suivre la grille lors d'un déplacement animé.
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_duration">
            <summary>
            Obtient ou définit la durée utilisée pour animer le déplacement du Sprite
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_frameRate">
            <summary>
            Obtient ou définit la définition en image par secondes de l'animation du déplacement du Sprite
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.Animate(System.Int32)">
            <summary>
            Permet de déplacer graduellement le Sprite d'un DisplayIndex à un autre 
            </summary>
            <param name="pFuturIndex">Index futur à atteindre</param>
        </member>
        <member name="M:VisualArrays.Sprite.AnimateToIndex(System.Int32)">
            <summary>
            Permet de déplacer graduellement le Sprite d'un DisplayIndex à un autre 
            </summary>
            <param name="pFuturIndex">Index futur à atteindre</param>
        </member>
        <member name="F:VisualArrays.Sprite.m_displayIndex">
            <summary>
            Obtient sous forme d'index l'emplacement de l'item sur la grille propriétaire
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveTo(System.Drawing.Point)">
            <summary>
            Déplace le Sprite à un emplacement spécifié en pixels, lorsque le Sprite est déplacé par
            cette méthode il devient automatiquement un Sprite libre dont le DisplayIndex devient NO_INDEX
            et son Address devient NO_ADDRESS.
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveRight">
            <summary>
            Déplace le Sprite à la colonne suivante.
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveLeft">
            <summary>
            Déplace le Sprite à la colonne précédente
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveUp">
            <summary>
            Déplace le Sprite à la rangée précédente
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveDown">
            <summary>
            Déplace le Sprite à la rangée suivante
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveTo(System.Int32,System.Int32)">
            <summary>
            Déplace le Sprite à un nouvel emplacement sur la grille.
            </summary>
            <param name="pRow">Rangée dans la grille.</param>
            <param name="pColumn">Colonne dans la grille.</param>
        </member>
        <member name="F:VisualArrays.Sprite.m_direction">
            <summary>
            Obtient ou définit la direction courante du Sprite utilisée lors d'un déplacement d'un pas.
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.MoveOneStep">
            <summary>
            Déplace le Sprite d'un seul pas dans la direction courante.
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.ChangeDirection">
            <summary>
            Change la direction du Sprite pour la direction suivante selon l'ordre suivant  : Left, Top, Right, Bottom
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.ChangeDirection(System.Boolean)">
            <summary>
            Change la direction du Sprite pour une direction différente, séquentiellement ou aléatoirement.
            </summary>
            <param name="pRandomDirection">true, pour que la nouvelle direction soit choisie aléatoirement</param>
        </member>
        <member name="F:VisualArrays.Sprite.m_owner">
            <summary>
            VisualArray propriétaire de ce Sprite.
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_acceptClick">
            <summary>
            Obtient ou définit si l'élément accepte les clicks.
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_allowOutsideDrop">
            <summary>
            Obtient ou définit si l'élément accepte d'être déposé à l'extérieur d'une cellule.
            </summary>
        </member>
        <member name="F:VisualArrays.Sprite.m_visible">
            <summary>
            Obtient ou définit si l'élément est visible ou masqué.
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.#ctor">
            <summary>
            Initialise une instance de la classe Sprite
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.Refresh">
            <summary>
            Force le 'Sprite' à se redessiner et à redessiner tous les éléments à cet emplacement
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.Draw(System.Drawing.Graphics)">
            <summary>
            Dessine ce 'Sprite'.
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.Sprite.DrawAtOrigin(System.Drawing.Graphics)">
            <summary>
            Dessine le Sprite à la coordonnée 0,0 dans le graphics
            </summary>
            <param name="pGraphics">Destination du dessin</param>
        </member>
        <member name="M:VisualArrays.Sprite.BringToFront">
            <summary>
            Place le 'Sprite' à l'avant plan devant tous les autres Sprites
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.SendToBack">
            <summary>
            Place le 'Sprite' au dernier plan derrière tous les autres Sprites
            </summary>
        </member>
        <member name="M:VisualArrays.Sprite.IsValidMove(VisualArrays.Address)">
            <summary>
            Indique si le Sprite peut se rendre à pDestinationAddress. Typiquement on doit la redéfinir dans une sous-classe.
            Par défaut elle vérifie simplement si l'adresse destinataire est dans la grille.
            </summary>
            <param name="pDestination">Adresse ou l'on souhaite déplacer le Sprite</param>
            <returns>true si l'adresse est acceptée</returns>
        </member>
        <member name="P:VisualArrays.Sprite.IsMultiCells">
            <summary>
            Indique si le Sprite se déploie sur plusieurs cellules
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.DisplayAddresses">
            <summary>
            Obtient un tableau des adresses de toutes les cellules qui composent le Sprite, lorsque que celles-ci
            se trouvent toutes sur la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.DisplayIndices">
            <summary>
            Obtient un tableau des indices de toutes les cellules qui composent le Sprite, lorsque celles-ci
            se trouvent toutes sur la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Bounds">
            <summary>
            Spécifie l'emplacement et la taille du Sprite dans la VisualArray en pixels
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.OffsetX">
            <summary>
            Spécifie le déplacement horizontale en pixels à appliquer sur l'emplacement du Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.OffsetY">
            <summary>
            Spécifie le déplacement verticale en pixels à appliquer sur l'emplacement du Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Alignment">
            <summary>
            Obtient ou définit l'alignement de l'élément sur une cellule.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.AlignOnGrid">
            <summary>
            Obtient ou définit si l'élément doit être aligné sur l'ensemble des cellules de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.AllowDrag">
            <summary>
            Obtient ou définit si le Sprite peut faire partie d'une opération glisser-déposer.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Animated">
            <summary>
            Obtient ou définit si le déplacement du Sprite doit être animé ou non.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.FollowGrid">
            <summary>
            Obtient ou définit si le Sprite doit suivre la grille lors d'un déplacement animé.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Duration">
            <summary>
            Obtient ou définit la durée utilisée pour animer le déplacement du Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.FrameRate">
            <summary>
            Obtient ou définit la définition en image par secondes de l'animation du déplacement du Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.DisplayIndex">
            <summary>
            Obtient sous forme d'index l'emplacement du 'Sprite' sur la grille propriétaire
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.DisplayAddress">
            <summary>
            Obtient ou définit l'adresse du Sprite sur la grille propriétaire.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Direction">
            <summary>
            Obtient ou définit la direction courante du Sprite utilisée lors d'un déplacement d'un pas.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.NextStepAddress">
            <summary>
            Fournit l'adresse future du Sprite si on le déplace d'un pas dans la direction courante avec MoveOneStep()
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Owner">
            <summary>
            VisualArray propriétaire de ce Sprite.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.AcceptClick">
            <summary>
            Obtient ou définit si l'élément accepte les clicks.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.AllowOutsideDrop">
            <summary>
            Obtient ou définit si le Sprite accepte d'être déposé à l'extérieur d'une cellule.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Visible">
            <summary>
            Obtient ou définit si l'élément est visible ou masqué.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Size">
            <summary>
            Obtient et définit la largeur et la hauteur du Sprite en pixels .
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Location">
            <summary>
            Obtient et définit la position du Sprite en pixels lorsque son DisplayIndex est -1.
            </summary>
        </member>
        <member name="P:VisualArrays.Sprite.Name">
            <summary>
            Obtient ou définit le nom du Sprite
            </summary>
        </member>
        <member name="M:VisualArrays.SegmentSprite.#ctor">
            <summary>
            Initialise un SegmentSprite
            </summary>
        </member>
        <member name="M:VisualArrays.SegmentSprite.RecalcBounds">
            <summary>
            Calcul le rectangle contour du Sprite en fonction de son alignement.
            </summary>
        </member>
        <member name="M:VisualArrays.SegmentSprite.Hit(System.Drawing.Rectangle)">
            <summary>
            Actuellement seulement les bouts sont détectés, pas le segment.
            </summary>
            <param name="pRectangle">Rectangle à vérifier</param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SegmentSprite.RelocateAt(System.Int32,System.Int32)">
            <summary>
            Repositionne le Sprite
            </summary>
            <param name="pSourceIndex">Nouvelle valeur pour le DisplayIndex</param>
            <param name="pDestinationIndex">Nouvelle valeur pour le DestinationIndex</param>
        </member>
        <member name="M:VisualArrays.SegmentSprite.RelocateAt(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Repositionne le Sprite
            </summary>
            <param name="pSourceRow"></param>
            <param name="pSourceColumn"></param>
            <param name="pDestinationRow"></param>
            <param name="pDestinationColumn"></param>
        </member>
        <member name="M:VisualArrays.SegmentSprite.Draw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.SegmentSprite.DrawAtOrigin(System.Drawing.Graphics)">
            <summary>
            Dessine le Sprite à la coordonnée 0,0 dans le graphics
            </summary>
            <param name="pGraphics">Destination du dessin</param>
        </member>
        <member name="P:VisualArrays.SegmentSprite.Color">
            <summary>
            Obtient ou définit la couleur de la forme
            </summary>
        </member>
        <member name="P:VisualArrays.SegmentSprite.Opacity">
            <summary>
            Obtient et définit le niveau d'opacité du Sprite entre 0 et 255.
            </summary>
        </member>
        <member name="P:VisualArrays.SegmentSprite.BulletSize">
            <summary>
            Obtient et définit la taille des ronds au bout du segment.
            </summary>
        </member>
        <member name="P:VisualArrays.SegmentSprite.DestinationIndex">
            <summary>
            Obtient ou définit l'index de la cellule où se termine le segment.
            </summary>
        </member>
        <member name="P:VisualArrays.SegmentSprite.DestinationAddress">
            <summary>
            Obtient ou définit l'adresse du Sprite sur la grille propriétaire.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualArraysTools">
            <summary>
            Contient des méthodes utilitaires concernant les VisualArrays
            </summary>
        </member>
        <member name="F:VisualArrays.VisualArraysTools.DELAI_INTER_TOUCHES">
            <summary>
            Délai acceptable entre les touches.
            </summary>
        </member>
        <member name="F:VisualArrays.VisualArraysTools.TestMode">
            <summary>
            Détermine si les VisualArrays sont actuellement exécutés dans un environnement de tests.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.Wait(System.Int32)">
            <summary>
            Permet d'attendre un délai spécifié par le paramètre pDelai.
            </summary>
            <param name="pDelai">Le délai à attendre.</param>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.NbDigits(System.Int32)">
            <summary>
            Fournit le nombre de caractères nécessaires pour réprésenter ce nombre
            </summary>
            <param name="pValeur"></param>
            <returns></returns>
        </member>
        <member name="F:VisualArrays.VisualArraysTools.m_currentKeyTime">
            <summary>
            Permet de déterminer le délai entre deux touches du clavier.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.NbDigits(System.Decimal,System.Int32)">
            <summary>
            Fournit le nombre de caractères nécessaires pour réprésenter ce nombre
            </summary>
            <param name="pValeur"></param>
            <param name="pDecimalPlaces"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.DrawDisabledImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image,System.Single)">
            <summary>
            Dessine une image dont la luminosité est ajustable entre 0 (très pâle) et 1 (très claire)
            </summary>
            <param name="pGraphics"></param>
            <param name="pRect"></param>
            <param name="pImage"></param>
            <param name="pBrightness"></param>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.CalculerCouleurEteinte(System.Drawing.Color)">
            <summary>
            Recalcule la couleur afin d'atténuer la couleur d'une cellule éteinte.
            </summary>
            <param name="pCouleur">Couleur à atténuer.</param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.CalculerCouleurAllumée(System.Drawing.Color)">
            <summary>
            Recalcule la couleur afin d'éclaircir une couleur sombre.
            </summary>
            <param name="pCouleur">Couleur à atténuer.</param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.DessinerSegments(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Color)">
            <summary>
            Dessiner le contenu d'une cellule en mode view Digit
            </summary>
            <param name="pGraphics">Graphique pour dessiner</param>
            <param name="pContentBounds">Contour de la cellule</param>
            <param name="pValue">Valeur à afficher</param>
            <param name="pColor">Couleur des segments</param>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.DrawText(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Color,System.Drawing.Font,System.Drawing.ContentAlignment)">
            <summary>
            Dessine une chaîne dans un rectangle donné.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pContentBounds">Rectangle destinataire.</param>
            <param name="pTexte">Texte à dessiner.</param>
            <param name="pCouleur">Couleur du texte.</param>
            <param name="pPolice">Police du texte.</param>
            <param name="pAlignement">Alignement du texte.</param>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.DrawBar(System.Drawing.Graphics,System.Drawing.Rectangle,VisualArrays.GraphAppearance,System.Decimal,System.Decimal,System.Decimal,System.Int32)">
            <summary>
            Dessine une barre pour un graphique
            </summary>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
            <param name="pGraphApp"></param>
            <param name="pMinimum"></param>
            <param name="pMaximum"></param>
            <param name="pValue"></param>
            <param name="pDecimalPlaces"></param>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.DrawBar(System.Drawing.Graphics,System.Drawing.Rectangle,VisualArrays.GraphAppearance,System.Int32,System.Int32,System.Int32)">
            <summary>
            Dessine une barre pour un graphique
            </summary>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
            <param name="pGraphApp"></param>
            <param name="pMinimum"></param>
            <param name="pMaximum"></param>
            <param name="pValue"></param>
        </member>
        <member name="F:VisualArrays.VisualArraysTools.va_objRandom">
            <summary>
            Utilisé pour les méthodes des grilles produisants des nombres aléatoires.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.RandomDecimal(System.Decimal,System.Decimal)">
            <summary>
            Génère un nombre aléatoire décimale.
            </summary>
            <param name="pMin">Borne inférieure inclue dans l'intervalle</param>
            <param name="pMax">Borne supérieure exlue de l'intervalle</param>
            <returns>Un nombre decimal aléatoire entre pMin et pMax.</returns>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.RandomInt(System.Int32,System.Int32)">
            <summary>
            Génère un nombre aléatoire entier.
            </summary>
            <param name="pMin">Borne inférieure inclue dans l'intervalle</param>
            <param name="pMax">Borne supérieure exlue de l'intervalle</param>
            <returns>Un nombre aléatoire entre pMin et pMax - 1.</returns>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.RandomChar(System.Char,System.Char)">
            <summary>
            Génère un caractère aléatoire compris entre pMinChar et pMaxChar.
            </summary>
            <param name="pMin">Borne inférieure inclue dans l'intervalle</param>
            <param name="pMax">Borne supérieure inclue de l'intervalle</param>
            <returns>Un caractère aléatoire entre pMin et pMax inclusivement</returns>
        </member>
        <member name="M:VisualArrays.VisualArraysTools.RandomBool">
            <summary>
            Génère une valeur booléenne aléatoire.
            </summary>
            <returns>Une valeur booléenne aléatoire</returns>
        </member>
        <member name="T:VisualArrays.VisualCells.VisualChar">
            <summary>
            Représente une cellule booléenne. 
            </summary>
        </member>
        <member name="T:VisualArrays.VisualCells.VisualValue`1">
            <summary>
            Classe abstraite qui représente une cellule contenant une valeur. 
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualValue`1.#ctor">
            <summary>
            Initialise un contrôle VisualValue
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualValue`1.m_backgroundVE">
            <summary>
            VisualElement utilisé pour dessiner le fond de la cellule
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualValue`1.GetNewBkgVisualElement(VisualArrays.IBackgroundAppearance)">
            <summary>
            Change le CellVisualElement pour le fond de la cellule
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualValue`1.UpdateVisualElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualValue`1.m_valueAlign">
            <summary>
            Obtient et définit l'alignement de la valeur dans la zone d'édition.
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualValue`1.m_borderColor">
            <summary>
            Obtient et définit la couleur de la bordure.
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualValue`1.m_borderSize">
            <summary>
            Obtient et définit la taille de la bordure.
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualValue`1.m_focusColor">
            <summary>
            Obtient et définit la couleur du focus.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualValue`1.DrawContent(System.Drawing.Graphics)">
            <summary>
            Dessiner le contenu du contrôle
            </summary>
            <param name="pGraphics">Graphique destinataire</param>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualValue`1.m_readOnly">
            <summary>
            Obtient ou définit si le contrôle est en lecture seule.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualValue`1.CompareTo(VisualArrays.VisualCells.VisualValue{`0})">
            <summary>
            Utilise le TabIndex afin de déterminer la position du contrôle dans une liste ordonnée
            </summary>
            <param name="other">VisualValue avec lequel comparer</param>
            <returns>S'il est plus petit, plus grand ou égal</returns>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualValue`1.OnGotFocus(System.EventArgs)">
            <summary>
            Dessine un rectangle représentant le focus
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualValue`1.OnLostFocus(System.EventArgs)">
            <summary>
            Dessine le contrôle sans le focus
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualValue`1.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Dessine le contenu du contrôle
            </summary>
            <param name="pe"></param>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualValue`1.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualValue`1.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualValue`1.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="E:VisualArrays.VisualCells.VisualValue`1.ValueChanged">
            <summary>
            Se produit lorsque la valeur du contrôle change
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualValue`1.ShowIndex">
            <summary>
            Détermine si le contrôle doit afficher son Index plutôt que sa valeur.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualValue`1.Index">
            <summary>
            Index du contrôle lorsque celui-ci se trouve dans un conteneur
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualValue`1.ValueAlign">
            <summary>
            Obtient et définit l'alignement de la valeur dans la zone d'édition.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualValue`1.BorderColor">
            <summary>
            Obtient et définit la couleur de la bordure.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualValue`1.BorderSize">
            <summary>
            Obtient et définit la taille de la bordure.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualValue`1.HideFocusRect">
            <summary>
            Obtient et définit si on doit masquer le rectangle du focus.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualValue`1.FocusColor">
            <summary>
            Obtient et définit la couleur du focus.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualValue`1.ReadOnly">
            <summary>
            Obtient ou définit si le contrôle est en lecture seule.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualValue`1.Text">
            <summary>
            Texte associé au contrôle.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualValue`1.Padding">
            <summary>
            Obtient et définit l'espacement interne du contrôle.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualValue`1.Value">
            <summary>
            La valeur actuelle du contrôle VisualValue
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualChar.#ctor">
            <summary>
            Initialise un contrôle VisualChar
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualChar.DrawContent(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualChar.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque le MouseWheel change de valeur
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualChar.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Gère la saisie d'un nombre decimal
            </summary>
            <param name="e">KeyPressEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualChar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualChar.RandomizeValue(System.Char,System.Char)">
            <summary>
            Assigne une valeur aléatoire à la propriété Value.
            </summary>
            <param name="pMinimum">borne inférieure de l'intervalle</param>
            <param name="pMaximum">borne supérieure de l'intervalle</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualChar.UpdateVisualElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualChar.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualChar.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualChar.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="E:VisualArrays.VisualCells.VisualChar.ValueChanged">
            <summary>
            Se produit lorsque la valeur du contrôle change
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualChar.CaseSensitive">
            <summary>
            Obtient et définit les caractères saisies sont sensible à la case.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualChar.ImageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la valeur en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualChar.View">
            <summary>
            Obtient et définit le style de visualisation la valeur du contrôle
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualChar.Minimum">
            <summary>
            Obtient et définit la valeur minimale pour la propriété Value
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualChar.Maximum">
            <summary>
            Obtient ou définit la valeur maximale pour la propriété Value
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualChar.Value">
            <summary>
            La valeur actuelle du contrôle VisualChar.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualCells.VisualDecimal">
            <summary>
            Représente une cellule contenant un nombre entier. 
            </summary>
        </member>
        <member name="T:VisualArrays.VisualCells.VisualGraph`1">
            <summary>
            Classe abstraite qui représente une cellule qui peut afficher une barre de graphique. 
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualGraph`1.va_allowGraphClick">
            <summary>
            Indique si le contrôle permet la saisie d'une valeur directement en cliquant dans la zone
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualGraph`1.#ctor">
            <summary>
            Initialise les champs concernant la partie graphique.
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualGraph`1.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualGraph`1.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualGraph`1.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualGraph`1.AllowGraphClick">
            <summary>
            Indique si le contrôle permet la saisie d'une valeur directement en cliquant dans la zone
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualGraph`1.GraphAppearance">
            <summary>
            Détermine différents aspects de l'apparence en mode graphique
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualGraph`1.WaitForEnter">
            <summary>
            Détermine si le contrôle attend la touche Enter avant de lancer un événement ValueChanged.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.#ctor">
            <summary>
            Initialise un contrôle VisualInt
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.DrawContent(System.Drawing.Graphics)">
            <summary>
            Dessine le contenu du contrôle.
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.OnEnabledChanged(System.EventArgs)">
            <summary>
            Se produit lorsque l'utilisateur change l'état du contrôle
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque l'utilisateur click sur le contrôle
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque le MouseWheel change de valeur
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Permet de rendre actives les touches "flèches" du clavier.
            </summary>
            ----------------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Accepte les touches "flèches"
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Gère la saisie d'un nombre decimal
            </summary>
            <param name="e">KeyPressEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.RandomizeValue">
            <summary>
            Assigne une valeur aléatoire à la propriété Value dans l'intervalle : Minimum à Maximum
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.RandomizeValue(System.Int32,System.Int32)">
            <summary>
            Assigne une valeur aléatoire à la propriété Value.
            </summary>
            <param name="pMinimum">borne inférieure de l'intervalle</param>
            <param name="pMaximum">borne supérieure de l'intervalle</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.UpdateVisualElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualDecimal.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualDecimal.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="E:VisualArrays.VisualCells.VisualDecimal.ValueChanged">
            <summary>
            Se produit lorsque la valeur du contrôle change
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualDecimal.ImageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la valeur en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualDecimal.View">
            <summary>
            Obtient et définit le style de visualisation la valeur du contrôle
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualDecimal.Minimum">
            <summary>
            Obtient et définit la valeur minimale pour la propriété Value
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualDecimal.Maximum">
            <summary>
            Obtient ou définit la valeur maximale pour la propriété Value
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualDecimal.Value">
            <summary>
            La valeur actuelle du contrôle VisualDecimal
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualDecimal.DecimalPlaces">
            <summary>
            Obtient ou définit le nombre de décimales à afficher.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualDecimal.ValueFormat">
            <summary>
            Obtient et définit le format d'affichage des valeurs dans la grille
            </summary>
        </member>
        <member name="T:VisualArrays.BaseVisualContainer`2">
            <summary>
            Représente un conteneur abstrait de VisualCell
            </summary>
        </member>
        <member name="F:VisualArrays.BaseVisualContainer`2.m_colVisualElements">
            <summary>
            Liste des VisualValue contenu dans le conteneur.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseVisualContainer`2.#ctor">
            <summary>
            Initialise un BaseVisualContainer
            </summary>
        </member>
        <member name="M:VisualArrays.BaseVisualContainer`2.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseVisualContainer`2.RenumeroterLesIndex">
            <summary>
            Permet de trier les éléments et de fixer leur index séquentiellement à partir de 0.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseVisualContainer`2.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Se produit lorsqu'un contrôle est retiré du conteneur
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseVisualContainer`2.GetEnumerator">
            <summary>
            Permet de parcourir séquentiellement tous les VisualInt dans ce conteneur.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.BaseVisualContainer`2.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Dessine le contrôle.
            </summary>
            <param name="pe"></param>
        </member>
        <member name="F:VisualArrays.BaseVisualContainer`2.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseVisualContainer`2.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.BaseVisualContainer`2.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseVisualContainer`2.ShowIndices">
            <summary>
            Détermine si les VisualInt doivent afficher leur Index en mode conception
            </summary>
        </member>
        <member name="P:VisualArrays.BaseVisualContainer`2.Length">
            <summary>
            Nombre de VisualValue dans le conteneur.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseVisualContainer`2.CellMouseDown">
            <summary>
            Se produit lors d'un MouseDown dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseVisualContainer`2.CellMouseUp">
            <summary>
            Se produit lors d'un MouseDown dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseVisualContainer`2.CellMouseClick">
            <summary>
            Se produit lors d'un MouseClick dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseVisualContainer`2.CellMouseDoubleClick">
            <summary>
            Se produit lors d'un MouseDoubleClick dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseVisualContainer`2.CellMouseEnter">
            <summary>
            Se produit lorsque le pointeur de la souris entre dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseVisualContainer`2.CellMouseLeave">
            <summary>
            Se produit lorsque le pointeur de la souris quitte une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseVisualContainer`2.CellMouseMove">
            <summary>
            Se produit lorsque le pointeur de la souris se déplace sur une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseVisualContainer`2.ValueChanged">
            <summary>
            Se produit lorsque la valeur d'un contrôle contenu change.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseVisualContainer`2.Item(System.Int32)">
            <summary>
            Accède aux VisualInt par un Index
            </summary>
            <param name="pIndex">Index du VisualInt dans le conteneur</param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.VisualDecimalContainer">
            <summary>
            Représente un conteneur de VisualBool
            </summary>
        </member>
        <member name="M:VisualArrays.VisualDecimalContainer.#ctor">
            <summary>
            Initialise un VisualIntContainer
            </summary>
        </member>
        <member name="F:VisualArrays.VisualDecimalContainer.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualDecimalContainer.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualDecimalContainer.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualCharContainer">
            <summary>
            Représente un conteneur de VisualChar
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCharContainer.#ctor">
            <summary>
            Initialise un VisualCharContainer
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCharContainer.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCharContainer.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualCharContainer.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualBoolContainer">
            <summary>
            Représente un conteneur de VisualBool
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolContainer.#ctor">
            <summary>
            Initialise un VisualIntContainer
            </summary>
        </member>
        <member name="F:VisualArrays.VisualBoolContainer.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolContainer.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualBoolContainer.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualIntContainer">
            <summary>
            Représente un conteneur de VisualInt
            </summary>
        </member>
        <member name="M:VisualArrays.VisualIntContainer.#ctor">
            <summary>
            Initialise un VisualIntContainer
            </summary>
        </member>
        <member name="F:VisualArrays.VisualIntContainer.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualIntContainer.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualIntContainer.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualValueArray`1">
            <summary>
            Cette classe représente les propriétés nécessaire pour afficher des graphiques
            </summary>
        </member>
        <member name="T:VisualArrays.BaseGrid">
            <summary>
            Représente une grille contenant des cellules sans contenu particulier.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.NB_COLONNES_MAXIMUM">
            <summary>
            Nombre de colonnes maximum dans la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.NB_RANGÉES_MAXIMUM">
            <summary>
            Nombre de rangées maximum dans la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.NB_COLONNES_MINIMUM">
            <summary>
            Nombre de colonnes minimum dans la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.NB_RANGÉES_MINIMUM">
            <summary>
            Nombre de rangées minimum dans la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.DELAI_DEFAUT">
            <summary>
            Délai par défaut.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.DELAI_MAX">
            <summary>
            Délai maximum autorisé.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.DELAI_MIN">
            <summary>
            Délai minimum autorisé.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.DELAI_INTER_TOUCHES">
            <summary>
            Délai acceptable entre les touches.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_tabCells">
            <summary>
            Tableau à 2 dimensions des cellules, chaque cellule contient 1 ou plusieurs VisualElement dans une liste chaînée
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.Swap(System.Int32,System.Int32)">
            <summary>
            Permute (échange) deux cellules.
            </summary>
            <param name="pIndex1">Index de la première cellule impliquée dans la permutation</param>
            <param name="pIndex2">Index de la deuxième cellule impliquée dans la permutation</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.IsOkToSelect(VisualArrays.Cell,System.Int32,System.Int32)">
            <summary>
            Indique si la cellule peut être sélectionnée
            </summary>
            <param name="pCell">Cellule à sélectionner</param>
            <param name="pRow">Rangée de la cellule</param>
            <param name="pColumn">Colonne de la cellule</param>
            <returns></returns>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_objRandom">
            <summary>
            Utilisé pour les méthodes des grilles produisants des nombres aléatoires.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_columnHeaders">
            <summary>
            Tableau à 1 dimension des en-têtes de colonnes.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_rowHeader">
            <summary>
            Tableau à 1 dimension des en-têtes des rangées.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_enteteColHaut">
            <summary>
            Obtient ou définit la hauteur réele de l'en-tête des colonnes.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_enteteLgnLarg">
            <summary>
            Obtient ou définit la largeur réele de l'en-tête des rangées.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.m_cellMargin">
            <summary>
            Obtient et définit la bordure autour de chaque cellule.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.m_cellContentAlign">
            <summary>
            Obtient et définit l'alignement du contenu principal pour toutes les cellules.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_delay">
            <summary>
            Obtient et définit le délai d'attente en millisecondes.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.Refresh">
            <summary>
            Force la grille à se redessiner complètement.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_enterKeyNextIndex">
            <summary>
            Obtient ou définit si la touche enter provoque un déplacement automatique du SelectedIndex.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_currentKeyTime">
            <summary>
            Permet de déterminer le délai entre deux touches du clavier.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_readOnly">
            <summary>
            Obtient ou définit si les cellules de la grille sont en lecture seule.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_isUpdating">
            <summary>
            Indique que plusieurs modifications sont sur le point de se produire dans le contenu 
            de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.BeginUpdate">
            <summary>
            Maintient les performances quand des cellules sont modifiées une par une en empêchant 
            le contrôle de dessiner tant que la méthode EndUpdate n'est pas appelée.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.EndUpdate">
            <summary>
            Reprend la peinture de la grille après qu'elle a été interrompue par la méthode BeginUpdate.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.IsSpriteCollisionAt(VisualArrays.Sprite,VisualArrays.Address)">
            <summary>
            Indique si un Sprite sera en collision avec un autre Sprite s'il est déplacé à l'adresse pFuturAddress
            </summary>
            <param name="pSprite">Sprite succeptible d'être déplacé</param>
            <param name="pFuturAddress">Adresse ou l'on souhaite le déplacer</param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.IsSpriteInsideAt(VisualArrays.Sprite,VisualArrays.Address)">
            <summary>
            Indique si toutes les cellules du Sprite sont à l'intérieur de la grille si on le déplace a pFuturAddress
            </summary>
            <param name="pSprite">Sprite à vérifier</param>
            <param name="pFuturAddress">Adresse ou l'on souhaite déplacer le Sprite</param>
            <returns></returns>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_selectionMode">
            <summary>
            Obtient ou définit le mode de sélection des cellules de la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_addressMode">
            <summary>
            Obtient ou définit le mode d'adressage de la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_addressView">
            <summary>
            Obtient ou définit le mode de visualisation des adresses en mode conception.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_enabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_disabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_disabledVisualElement">
            <summary>
            Élément visuel affiché dans le fond des cellules dont l'état Enabled est false.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_selectionVisualElement">
            <summary>
            Élément visuel affiché lorsqu'une cellule est sélectionnée.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateCellsBkgVisualElement">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateCellsBkgVisualElement(VisualArrays.IBackgroundAppearance)">
            <summary>
            Change le fond de toutes les cellules d'une VisualBoolArray
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_resizeMode">
            <summary>
            Obtient ou définit le mode de redimentionnement de la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_rowCount">
            <summary>
            Obtient et définit le nombre de rangées dans la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.BaseGrid.va_columnCount">
            <summary>
            Obtient ou définit le nombre de colonnes dans la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.RelocateSprites">
            ============================================================================================
             <summary>
             Replace les Sprites au besoin, si la position du Sprite est à l'extérieur des limites de la grille
             </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.#ctor">
            <summary>
            Initialise une nouvelle instance de la grille avec les valeurs par défaut.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.RandomDirection">
            <summary>
            Génère une direction aléatoire.
            </summary>
            <returns>Une direction aléatoire</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.RandomDirection(VisualArrays.enuDirection)">
            <summary>
            Génère une direction aléatoire différente de celle fournie en paramètre
            </summary>
            <param name="pCurrentDirection">Direction courante</param>
            <returns>Une direction aléatoire différente</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.RandomIndex">
            <summary>
            Génère un nombre aléatoire.
            </summary>
            <returns>Un nombre aléatoire entre 0 et le nombre de cellules de la grille.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.RandomAddress">
            <summary>
            Génère une adresse aléatoire.
            </summary>
            <returns>Une adresse aléatoire sous la forme rangée et colonne.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.Wait">
            <summary>
            Permet d'attendre un délai spécifié par la propriété Delay.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.Wait(System.Int32)">
            <summary>
            Permet d'attendre un délai spécifié par le paramètre pDelai.
            </summary>
            <param name="pDelai">Le délai à attendre.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.ClearValues">
            <summary>
            Ré-initialise chaque cellule à sa valeur par défaut.
            </summary>
            ---------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.Clear">
            ---------------------------------------------------------------------------
            <summary>
            Ré-Initialise chaque cellule à son état initial par défaut.
            </summary>
            ---------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawColumnHeader(System.Int32,System.String)">
            <summary>
            Dessiner l'en-tête d'une colonne.
            </summary>
            <param name="pColumn">Colonne à redessiner.</param>
            <param name="pText">Texte à redessiner.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawRowHeader(System.Int32,System.String)">
            <summary>
            Dessiner l'en-tête d'une rangée.
            </summary>
            <param name="pRow">Rangée à redessiner.</param>
            <param name="pText">Texte à redessiner.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawColumnsHeaders(System.Drawing.Graphics,System.Int32,System.String,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Dessine l'en-tête des colonnes.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner</param>
            <param name="pColumn">Index de la colonne de la cellule.</param>
            <param name="pTexte">Texte à dessiner.</param>
            <param name="pCouleur">Couleur du texte.</param>
            <param name="pPolice">Police du texte.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawRowsHeaders(System.Drawing.Graphics,System.Int32,System.String,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Dessine l'en-tête des rangées.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Index de la rangée de la cellule.</param>
            <param name="pTexte">Texte à dessiner.</param>
            <param name="pCouleur">Couleur du texte.</param>
            <param name="pPolice">Police du texte.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawAllHeaders(System.Drawing.Graphics)">
            <summary>
            Dessine le texte des en-têtes de rangées et de colonnes.
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawText(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Color,System.Drawing.Font,System.Drawing.ContentAlignment)">
            <summary>
            Dessine une chaîne dans un rectangle donné.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pContentBounds">Rectangle destinataire.</param>
            <param name="pTexte">Texte à dessiner.</param>
            <param name="pCouleur">Couleur du texte.</param>
            <param name="pPolice">Police du texte.</param>
            <param name="pAlignement">Alignement du texte.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawGrid(System.Drawing.Graphics)">
            <summary>
            Dessine le quadrillage dans un objet graphique.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.ReCalculerTaille">
            <summary>
            Recalcule la largeur et la hauteur de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.CreateSpritesOffScreen(System.Int32,System.Int32)">
            <summary>
            Permet de créer une zone de dessin spécialement pour l'affichage des Sprites
            </summary>
            <param name="pWidth">Largeur du offscreen bitmap</param>
            <param name="pHeight">Hauteur du offscreen bitmap </param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawSelection(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la sélection sur la cellule selon SelectionAppearance.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            ----------------------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawDragDestination(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la destination dans une opération glisser/déposer.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            ----------------------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawAllCells">
            <summary>
            Dessine toutes les cellules de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.CelluleAPixels(System.Int32,System.Int32)">
            <summary>
            Transforme les coordonnées de la cellule (rangée, colonne) en pixels. 
            </summary>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
            <returns>Coordonnées en pixels.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.PixelsToAddress(System.Int32,System.Int32)">
            -------------------------------------------------------------------------------------
            <summary>
            Fournit la rangée et la colonne en fonction des coordonnées en pixels.
            </summary>
            <param name="pX">Position sur l'axe des X en pixels.</param>
            <param name="pY">Position sur l'axe des Y en pixels.</param>
            <returns>Adresse de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.AddressFromIndex(System.Int32)">
            <summary>
            Fournit une adresse sous la forme rangée et colonne à partir d'un index.
            </summary>
            <param name="pIndex">Index de la cellule.</param>
            <returns>Adresse sous la forme rangée et colonne.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.IndexToAddress(System.Int32)">
            <summary>
            Convertit un index en une adresse, en tenant compte du mode d'adressage.
            Lève une exception si l'index est hors limite.
            </summary>
            <param name="pIndex">Index à convertir.</param>
            <returns>Adresse obtenue</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.AddressFromAddressMode(System.Int32,System.Int32)">
            <summary>
            Obtient une adresse en tenant compte du mode d'adressage.
            </summary>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
            <returns>Adresse qui tient compte du mode d'adressage.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.IndexFromAddress(System.Int32,System.Int32)">
            <summary>
            Transforme les coordonnées en un index correspondant 
            aux cellules séquentiellement en tenant compte du ModeAdressage.
            </summary>
            <param name="pRow">Ligne de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>L'index d'une ligne/colonne.</returns>
            -------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawAllCells(System.Drawing.Graphics)">
            <summary>
            Dessine toutes les cellules de la grille dans l'objet graphique.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawAllAddress(System.Drawing.Graphics)">
            <summary>
            Dessine les adresses de chacune des cellules dans l'objet graphique.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawAddress(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine dans un objet graphique, l'adresse de la cellule dont les coordonnées sont fournies.
            </summary>
            <param name="pGraphics">obj graphique où dessiner</param>
            <param name="pRow">Rangée</param>
            <param name="pColumn">Colonne</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawStrike(System.Drawing.Graphics,System.Drawing.Rectangle,VisualArrays.DisabledAppearance)">
            <summary>
            Dessine des raillures pour signifier une cellule utilisée ou inactive.
            </summary>
            <param name="pGraphics">Graphique utilisé</param>
            <param name="pBounds">Contour de la cellule</param>
            <param name="pDisabledAppearance">Caractéristiques d'une cellule inactive</param>/// 
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawCellDragContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Dessiner le contenu d'une cellule dans une zone de la taille de la cellule, 
            servant à l'opération glisser/déposer.
            </summary>
            <param name="pGraphics"></param>
            <param name="pContentBounds">Contour du contenu de la cellule</param>
            <param name="pRow">Rangée</param>
            <param name="pColumn">Colonne</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine dans un objet graphique, la cellule dont les coordonnées sont fournies.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DrawCellBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,VisualArrays.Cell)">
            <summary>
            Dessine le fond d'une cellule.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBounds(System.Int32,System.Int32)">
            <summary>
            Fournit le rectangle englobant une cellule.
            </summary>
            <param name="pRow">Rangée</param>
            <param name="pColumn">Colonne</param>
            <returns>Rectangle calculé</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBounds(System.Int32)">
            <summary>
            Obtient le contour d'une cellule.
            </summary>
            <param name="pIndex">Index de la cellule</param>
            <returns>Contour d'une cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellSelectionBounds(System.Int32,System.Int32)">
            <summary>
            Fournit le rectangle englobant la sélection.
            </summary>
            <param name="pRow">Rangée</param>
            <param name="pColumn">Colonne</param>
            <returns>Rectangle calculé.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellContentBounds(System.Int32,System.Int32)">
            <summary>
            Fournit le rectangle englobant le contenu d'une cellule en tenant compte de la marge.
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Rectangle calculé.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellContentBounds(System.Int32,System.Int32,System.Windows.Forms.Padding)">
            <summary>
            Fournit le rectangle englobant le contenu d'une cellule en tenant compte de la marge et du padding
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pPadding">Espacement interne</param>
            <returns>Rectangle calculé.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellMiddle(System.Int32,System.Int32)">
            <summary>
            Fournit le point central d'une cellule.
            </summary>
            <param name="pRow">Ligne de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Point centrale de la cellule en pixels.</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateCellAndSprites(System.Int32,System.Int32)">
            <summary>
            Redessine une cellule ainsi que le ou les Sprites qui s'y trouvent.
            </summary>
            <param name="pRow">Rangée de la cellule à mettre à jour</param>
            <param name="pColumn">Colonne de la cellule à mettre à jour</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateCellAndSprites(System.Int32)">
            <summary>
            Redessine une cellule ainsi que le ou les Sprites qui s'y trouvent.
            </summary>
            <param name="pIndex">Index de la cellule à mettre à jour</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateCellAndSpritesDuringDrag(System.Int32)">
            <summary>
            Redessine une cellule ainsi que le ou les Sprites qui s'y trouvent ainsi que le DragAppearance.
            </summary>
            <param name="pIndex">Index de la cellule à mettre à jour</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateCellAndSpritesDuringDragPlus(VisualArrays.Sprite,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Redessine une cellule ainsi que le ou les Sprites qui s'y trouvent ainsi que le DragAppearance.
            </summary>
            <param name="pSprite"></param>
            <param name="pRow"></param>
            <param name="pColumn"></param>
            <param name="pShowDrag"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.UpdateSprites(System.Drawing.Rectangle)">
            <summary>
            Dessine à l'écran tous les Sprites qui touchent la zone fournie en paramètre
            </summary>
            <param name="pBounds">Zone à vérifier</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.ResetAllValuesToDefault">
            <summary>
            Initialise toutes les valeurs de cellules à leurs valeurs par défaut.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.ResizeColumnHeader">
            <summary>
            Modifie le nombres de cellules dans l'entête des colonnes
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.ResizeRowHeader">
            <summary>
            Modifie le nombres de cellules dans l'entête des rangées
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.ResizeValueArray">
            <summary>
            Modifie le nombre de cellules dans les tableaux à partir des propriétés va_rowCount et va_columnCount.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.CreateCellArray">
            <summary>
            va créer un tableau pour les cellules à partir des propriétés va_rowCount et va_columnCount.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.Clear(System.Int32)">
            <summary>
            Vide le contenu de la cellule dont l'index est fourni en paramètre.
            </summary>
            <param name="pIndex">Index de la cellule à vider.</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.Clear(System.Int32,System.Int32)">
            <summary>
            Vide le contenu de la cellule à une position.
            </summary>
            <param name="pRow">Rangée de la cellule à vider.</param>
            <param name="pColumn">Colonne de la cellule à vider.</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.IsInputKey(System.Windows.Forms.Keys)">
            -----------------------------------------------------------------------------
            <summary>
            Permet d'intercepter les événements reliés aux touches de déplacement du curseur
            afin de modifier les actions sur la grille.
            </summary>
            <param name="key">La touche courante.</param>
            <returns> Si la touche est acceptée ou non.</returns>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.BaseGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnResize(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnEnabledChanged(System.EventArgs)">
            <summary>
            Actuellement il n'y a rien de particulier à faire lorsque la grille n'est plus active
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnMouseLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.HitSprite(System.Int32,System.Int32)">
            <summary>
            Fournit le Sprite en collision avec les coordonnées passées en paramètres
            </summary>
            <param name="pX">Coordonnée X à vérifier</param>
            <param name="pY">Coordonnée Y à vérifier</param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se charge d'un double clic sur une cellule de la grille.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se charge d'un MouseDown sur la grille, cela génère des événements CellMouse...
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SelectNextCell">
            <summary>
            Change le va_selectedIndex à la prochaine plus petite valeur pour une cellule sélectionnée
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se charge d'un MouseUp sur la grille, cela génère des événements CellMouse...
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Se charge d'une opération "Déposer sur la grille".
            </summary>
            <param name="drgevent">Informations concernant l'opération</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            S'exécute lorsqu'une opération de glisser/déposer entre dans la grille
            </summary>
            <param name="drgevent">Informations concernant l'opération</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnDragLeave(System.EventArgs)">
            <summary>
            S'exécute lorsque l'opération glisser/déposer quitte la grille
            </summary>
            <param name="e">Informations concernant l'opération</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellVisibility(System.Int32,System.Boolean)">
            <summary>
            Assigne une nouvelle visibilité à une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pVisible">true pour que la cellule soit visible, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellVisibility(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Assigne une nouvelle visibilité à une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pVisible">true pour que la cellule soit visible, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DisableSelectedCell">
            <summary>
            Désactive la cellule sélectionnée, lève une exception si aucune cellule n'est sélectionnée
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.DisableCell(System.Int32)">
            <summary>
            Rend inactive la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.DisableCell(System.Int32,System.Int32)">
            <summary>
            Rend inactive la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.EnableCell(System.Int32)">
            <summary>
            Rend active la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.EnableCell(System.Int32,System.Int32)">
            <summary>
            Rend active la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellEnabled(System.Int32,System.Boolean)">
            <summary>
            Assigne un nouvel état à la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pEnabled">true pour que la cellule soit active, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellEnabled(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Assigne un nouvel état à la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pEnabled">true pour que la cellule soit active, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellReadOnly(System.Int32,System.Boolean)">
            <summary>
            Assigne une nouvelle valeur à la propriété ReadOnly d'une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pReadOnly">true pour que la cellule soit ReadOnly, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellReadOnly(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Assigne un nouvel état à la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pReadOnly">true pour que la cellule soit ReadOnly, false autrement</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundZoom(System.Int32,System.Int32)">
            <summary>
            Assigne une nouvelle valeur de zoom à l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pZoom">Zoom à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundZoom(System.Int32,System.Int32,System.Int32)">
            <summary>
            Assigne une nouvelle valeur de zoom à l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pZoom">Zoom à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundImage(System.Int32,System.Drawing.Image)">
            <summary>
            Assigne (si possible) une nouvelle image de fond à l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pImage">Image à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundImage(System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            Assigne (si possible) une nouvelle image de fond à l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pImage">Image à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundPenWidth(System.Int32,System.Int32)">
            <summary>
            Assigne (si possible) une nouvelle taille de crayon à l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pPenWidth">Taille du crayon utilisé pour tracer la forme</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundPenWidth(System.Int32,System.Int32,System.Int32)">
            <summary>
            Assigne (si possible) une nouvelle taille de crayon à l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pPenWidth">Taille du crayon utilisé pour tracer la forme</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundShape(System.Int32,VisualArrays.enuShape)">
            <summary>
            Assigne (si possible) une nouvelle forme de fond à l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pShape">Forme à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundShape(System.Int32,System.Int32,VisualArrays.enuShape)">
            <summary>
            Assigne (si possible) une nouvelle couleur de fond à l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pShape">Forme à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundBorder(System.Int32,System.Windows.Forms.Padding)">
            <summary>
            Assigne une nouvelle configuration de bordure à la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pBorder">Taille des bordures de la cellule</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundBorder(System.Int32,System.Int32,System.Windows.Forms.Padding)">
            <summary>
            Assigne une nouvelle configuration de bordures à la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pBorder">Taille des bordures de la cellule</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundColor(System.Int32,System.Drawing.Color)">
            <summary>
            Assigne (si possible) une nouvelle couleur de fond à l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pColor">Couleur à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Assigne (si possible) une nouvelle couleur de fond à l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pColor">Couleur à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundVisualElement(System.Int32,VisualArrays.CellVisualElement)">
            <summary>
            Assigne un nouveau VisualElement pour le fond de la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pVisualElement">VisualElement à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellBackgroundVisualElement(System.Int32,System.Int32,VisualArrays.CellVisualElement)">
            <summary>
            Assigne un nouveau VisualElement pour le fond de la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pVisualElement">VisualElement à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellUnderValueVisualElement(System.Int32,VisualArrays.CellVisualElement)">
            <summary>
            Assigne un nouveau VisualElement pour le fond de la cellule sous la valeur
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pVisualElement">VisualElement à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellUnderValueVisualElement(System.Int32,System.Int32,VisualArrays.CellVisualElement)">
            <summary>
            Assigne un nouveau VisualElement pour le fond de la cellule sous la valeur
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pVisualElement">VisualElement à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.ClearCellUnderValueVisualElements(System.Int32)">
            <summary>
            Supprime le 'VisualElement' sous la valeur pour cette cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.ClearCellUnderValueVisualElements(System.Int32,System.Int32)">
            <summary>
            Supprime le 'VisualElement' sous la valeur pour cette cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellUserData(System.Int32,System.Object)">
            <summary>
            Assigne un objet de données à une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pUserData">Objet à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellUserData(System.Int32,System.Int32,System.Object)">
            <summary>
            Assigne un objet de données à une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pUserData">Objet à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellUserContent(System.Int32,VisualArrays.ICellDraw)">
            <summary>
            Assigne un objet de données à une cellule se chargeant de dessiner son contenu
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pUserContent">Objet à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.SetCellUserContent(System.Int32,System.Int32,VisualArrays.ICellDraw)">
            <summary>
            Assigne un objet de données à une cellule se chargeant de dessiner son contenu
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pUserContent">Objet à assigner</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundImage(System.Int32)">
            <summary>
            Obtient (si possible) l'image de fond de la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Image de fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundImage(System.Int32,System.Int32)">
            <summary>
            Obtient (si possible) l'image de fond de la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Image de fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundPenWidth(System.Int32)">
            <summary>
            Obtient (si possible) la taille du crayon de l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Taille du crayon utilisée</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundPenWidth(System.Int32,System.Int32)">
            <summary>
            Obtient (si possible) la taille du crayon de l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Taille du crayon utilisée</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundBorder(System.Int32)">
            <summary>
            Obtient (si possible) les bordures de l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Bordures utilisées pour dessiner la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundBorder(System.Int32,System.Int32)">
            <summary>
            Obtient (si possible) les bordures de l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Bordures utilisées pour dessiner la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundShape(System.Int32)">
            <summary>
            Obtient (si possible) la forme de l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Forme utilisée pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundShape(System.Int32,System.Int32)">
            <summary>
            Obtient (si possible) la forme de l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Forme utilisée pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundColor(System.Int32)">
            <summary>
            Obtient (si possible) la couleur de fond de l'élément
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Couleur utilisée pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundColor(System.Int32,System.Int32)">
            <summary>
            Obtient (si possible) la couleur de fond de l'élément
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Couleur utilisée pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundVisualElement(System.Int32)">
            <summary>
            Obtient le VisualElement utilisé pour dessiner le fond de la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>VisualElement utilisé pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundVisualElement(System.Int32,System.Int32)">
            <summary>
            Obtient le VisualElement utilisé pour dessiner le fond de la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>VisualElement utilisé pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundZoom(System.Int32)">
            <summary>
            Obtient le Zoom utilisé pour dessiner le fond de la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Zoom utilisé pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellBackgroundZoom(System.Int32,System.Int32)">
            <summary>
            Obtient le Zoom utilisé pour dessiner le fond de la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Zoom utilisé pour dessiner le fond de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellUserData(System.Int32)">
            <summary>
            Obtient l'objet de données utilisateur associé à une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Objet de données utilisateur associé à la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellUserData(System.Int32,System.Int32)">
            <summary>
            Obtient l'objet de données utilisateur associé à une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Objet de données utilisateur associé à la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellUserContent(System.Int32)">
            <summary>
            Obtient l'objet de données utilisateur associé à une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Objet de données utilisateur associé à la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellUserContent(System.Int32,System.Int32)">
            <summary>
            Obtient l'objet de données utilisateur associé à une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Objet de données utilisateur associé à la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellEnabled(System.Int32)">
            <summary>
            Obtient l'état d'une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>État de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellEnabled(System.Int32,System.Int32)">
            <summary>
            Obtient l'état d'une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>État de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellReadOnly(System.Int32)">
            <summary>
            Obtient l'état lecture seule d'une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>État de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellReadOnly(System.Int32,System.Int32)">
            <summary>
            Obtient l'état lecture seule d'une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>État de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellVisibility(System.Int32)">
            <summary>
            Obtient l'état de visibilité d'une cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>État de visibilité de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellVisibility(System.Int32,System.Int32)">
            <summary>
            Obtient l'état de visibilité d'une cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>État de visibilité de la cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.ClearCellVisualElements(System.Int32)">
            <summary>
            Supprime tous les 'VisualElement' associés avec la cellule (sauf le background)
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.ClearCellVisualElements(System.Int32,System.Int32)">
            <summary>
            Supprime tous les 'VisualElement' associés avec la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.AddCellVisualElement(System.Int32,VisualArrays.CellVisualElement)">
            <summary>
            Ajoute un nouveau VisualElement sur la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pVisualElement">VisualElement à ajouter</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.AddCellVisualElement(System.Int32,System.Int32,VisualArrays.CellVisualElement)">
            <summary>
            Ajoute un nouveau VisualElement sur la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pVisualElement">VisualElement à ajouter</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellVisualElements(System.Int32)">
            <summary>
            Fournit la liste de tous les 'VisualElement' attachés à cette cellule (sauf le background)
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <returns>Liste des éléments visuels attachés à cette cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.GetCellVisualElements(System.Int32,System.Int32)">
            <summary>
            Fournit la liste de tous les 'VisualElement' attachés à cette cellule (sauf le background)
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <returns>Liste des éléments visuels attachés à cette cellule</returns>
        </member>
        <member name="M:VisualArrays.BaseGrid.RemoveCellVisualElement(System.Int32,System.Int32)">
            <summary>
            Supprime le VisualElement à la couche indiquée dans le fond de la cellule
            </summary>
            <param name="pIndex">Index spécifié en tenant compte du mode d'adressage</param>
            <param name="pLayerIndex">Numéro de couche de l'élément à supprimer</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.RemoveCellVisualElement(System.Int32,System.Int32,System.Int32)">
            <summary>
            Supprime le VisualElement à la couche indiquée dans le fond de la cellule
            </summary>
            <param name="pRow">Rangée de la cellule.</param>
            <param name="pColumn">Colonne de la cellule.</param>
            <param name="pLayerIndex">Numéro de couche de l'élément à supprimer</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.AnimateSprite(VisualArrays.Sprite,System.Int32)">
            ============================================================================================================
             <summary>
             Permet d'animer le déplacement d'un Sprite de sa position actuelle vers la position pNewIndex
             </summary>
             <param name="pobjSprite">Sprite à déplacer</param>
             <param name="pNewIndex">Nouvelle position ou déplacement le Sprite</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.IsValidAddress(VisualArrays.Address)">
            <summary>
            Indique l'adresse pAddress est dans les limites de la grille
            </summary>
            <param name="pAddress">Adresse à vérifier</param>
            <returns>true si l'adresse est dans les limites de la grille</returns>
        </member>
        <member name="F:VisualArrays.BaseGrid.components">
            <summary> 
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.BaseGrid.Dispose(System.Boolean)">
            <summary> 
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.BaseGrid.InitializeComponent">
            <summary> 
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.ColumnHeaderArray">
            <summary>
            Tableau à 1 dimension des en-têtes de colonnes.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.RowHeaderArray">
            <summary>
            Tableau à 1 dimension des en-têtes des rangées.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.InDesignMode">
            <summary>
            Fournit l'état du contrôle
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.CellMargin">
            <summary>
            Obtient et définit la bordure autour de chaque cellule.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.CellContentAlign">
            <summary>
            Obtient et définit l'alignement du contenu principal pour toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.CellSize">
            <summary>
            Obtient et définit la largeur et la hauteur des cellules en pixels .
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.Delay">
            <summary>
            Obtient et définit le délai d'attente en millisecondes.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.AllowDrag">
            <summary>
            Indique si le contrôle permet d'utiliser l'opération glisser.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.AllowSelfDrop">
            <summary>
            Indique si le contrôle permet d'utiliser l'opération glisser-déposer sur lui-même.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.AllowCellDrag">
            <summary>
            Indique si le contrôle permet d'utiliser l'opération glisser-déposer sur lui-même.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.TestMode">
            <summary>
            Indique si le contrôle est en mode test.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.EnterKeyNextIndex">
            <summary>
            Obtient ou définit si la touche enter provoque un déplacement automatique du SelectedIndex.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.Sprites">
            <summary>
            Obtient la collection des objets Sprite qui s'affiche sur la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.ReadOnly">
            <summary>
            Obtient ou définit si les cellules de la grille sont en lecture seule.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectionMode">
            <summary>
            Obtient ou définit le mode de sélection des cellules de la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectedAddress">
            <summary>
            Obtient ou définit l'adresse de la cellule sélectionnée en tenant compte du mode d'adressage.
            </summary>
            ------------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectedIndex">
            <summary>
            Obtient ou définit l'index de la cellule sélectionnée en tenant compte du mode d'adressage.
            </summary>
            ------------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectedAddresses">
            <summary>
            Obtient un tableau des adresses de toutes les cellules sélectionnées
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectedIndices">
            <summary>
            Obtient un tableau des indices de toutes les cellules sélectionnées
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.SelectedIndexChanged">
            <summary>
            Événement qui se produit lorsque la valeur de la propriété SelectedIndex est modifiée.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SelectionChanged">
            <summary>
            Événement qui se produit lorsque la sélection est modifiée.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.BaseGrid.ColumnHeader">
            <summary>
            Détermine différents aspects de l'apparence de l'en-tête des colonnes
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.RowHeader">
            <summary>
            Détermine différents aspects de l'apparence de la sélection
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.AddressMode">
            <summary>
            Obtient ou définit le mode d'adressage de la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.AddressView">
            <summary>
            Obtient ou définit le mode de visualisation des adresses en mode conception.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.EnabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.DisabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.SelectionAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la sélection
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.DragAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la destination dans une opération glisser/déposer
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.GridAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la sélection
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.BackgroundImageLayout">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.ResizeMode">
            <summary>
            Obtient ou définit le mode de redimentionnement de la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.RowCount">
            <summary>
            Obtient et définit le nombre de rangées dans la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.ColumnCount">
            <summary>
            Obtient ou définit le nombre de colonnes dans la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.Length">
            <summary>
            Obtient le nombre de cellules dans la grille.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.Padding">
            <summary>
            Obtient et définit l'espacement interne entre le contrôle et la zone contenant les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.BaseGrid.GridBounds">
            <summary>
            Fournit le rectangle englobant toutes les cellules.
            </summary>
            <returns></returns>
        </member>
        <member name="E:VisualArrays.BaseGrid.LengthChanged">
            <summary>
            Se produit lorsque le nombre de cellules de la grille change.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.EnterKeyPress">
            <summary>
            Se produit lorsque la touche Entrée est enfoncée.
            </summary>
            ------------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseDown">
            <summary>
            Se produit lors d'un MouseDown sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseUp">
            <summary>
            Se produit lors d'un MouseDown sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseClick">
            <summary>
            Se produit lors d'un MouseClick sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseDoubleClick">
            <summary>
            Se produit lors d'un MouseDoubleClick sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseEnter">
            <summary>
            Se produit lorsque le pointeur de la souris entre sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseLeave">
            <summary>
            Se produit lorsque le pointeur de la souris quitte un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteMouseMove">
            <summary>
            Se produit lorsque le pointeur de la souris se déplace sur un Sprite visible.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseDown">
            <summary>
            Se produit lors d'un MouseDown dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseUp">
            <summary>
            Se produit lors d'un MouseDown dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseClick">
            <summary>
            Se produit lors d'un MouseClick dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseDoubleClick">
            <summary>
            Se produit lors d'un MouseDoubleClick dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseEnter">
            <summary>
            Se produit lorsque le pointeur de la souris entre dans une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseLeave">
            <summary>
            Se produit lorsque le pointeur de la souris quitte une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.CellMouseMove">
            <summary>
            Se produit lorsque le pointeur de la souris se déplace sur une cellule de la grille.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderMouseDown">
            <summary>
            Se produit lors d'un MouseDown sur l'en-tête des colonnes.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderMouseUp">
            <summary>
            Se produit lors d'un MouseUp sur l'en-tête des colonnes.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderClick">
            <summary>
            Se produit lors d'un clic sur l'en-tête des colonnes.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderDoubleClick">
            <summary>
            Se produit lors d'un DoubleClic sur l'en-tête des colonnes.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderMouseEnter">
            <summary>
            Se produit lorsque le pointeur de la souris entre dans une cellule de l'en-tête des colonnes.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.ColumnHeaderMouseLeave">
            <summary>
            Se produit lorsque le pointeur de la souris quitte une cellule de l'en-tête des colonnes.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderMouseDown">
            <summary>
            Se produit lors d'un MouseDown sur l'en-tête des rangées.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderMouseUp">
            <summary>
            Se produit lors d'un MouseUp sur l'en-tête des rangées.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderClick">
            <summary>
            Se produit lors d'un clic sur l'en-tête des rangées.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderDoubleClick">
            <summary>
            Se produit lors d'un DoubleClic sur l'en-tête des rangées.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderMouseEnter">
            <summary>
            Se produit lorsque le pointeur de la souris entre dans une de l'en-tête des colonnes.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.RowHeaderMouseLeave">
            <summary>
            Se produit lorsque le pointeur de la souris quitte une de l'en-tête des colonnes.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="E:VisualArrays.BaseGrid.BeforeSpriteDrag">
            -------------------------------------------------------------------------------------
            <summary>
            Se produit juste avant d'enclencher l'opération glisser-déposer d'un Sprite, permettant de la bloquer.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.BeforeCellDrag">
            -------------------------------------------------------------------------------------
            <summary>
            Se produit juste avant d'enclencher l'opération glisser-déposer d'une cellule, permettant de la bloquer.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteDragDrop">
            -------------------------------------------------------------------------------------
            <summary>
            Se produit lorsqu'un Sprite est glisser-déposer sur la grille.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteOutsideDrop">
            -------------------------------------------------------------------------------------
            <summary>
            Se produit lorsqu'un Sprite est déposé à l'extérieur des cellules.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.SpriteDragOver">
            -------------------------------------------------------------------------------------
            <summary>
            Se produit lorsqu'un Sprite survol une cellule dans une opération glisser-déposer.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.CellDragDrop">
            -------------------------------------------------------------------------------------
            <summary>
            Se produit lorsqu'une cellule est glissée-déposée sur la grille.
            </summary>
        </member>
        <member name="E:VisualArrays.BaseGrid.CellDragOver">
            -------------------------------------------------------------------------------------
            <summary>
            Se produit lorsqu'une cellule est glissée-déposée sur la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.VisualValueArray`1.va_tabValues">
            <summary>
            Tableau à 2 dimensions des cellules de la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.VisualValueArray`1.m_defaultValue">
            <summary>
            Valeur par défaut qui sera assignée à toutes les cellules
            </summary>
        </member>
        <member name="F:VisualArrays.VisualValueArray`1.m_specialValue">
            <summary>
            Une valeur spéciale à afficher différemment des autres voir SpecialValueAppearance
            </summary>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.ContainsValue(`0)">
            <summary>
            Détermine si pValue se retrouve dans l'une des cellules de la grille
            </summary>
            <param name="pValue"></param>
            <returns>Vrai si pValue se retrouve dans l'une des cellules de la grille</returns>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.IsOkToSelect(VisualArrays.Cell,System.Int32,System.Int32)">
            <summary>
            Indique si la cellule peut être sélectionnée
            </summary>
            <param name="pCell">Cellule à sélectionner</param>
            <param name="pRow">Rangée de la cellule</param>
            <param name="pColumn">Colonne de la cellule</param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.ResizeValueArray">
            <summary>
            Modifie le nombre de cellules dans le tableau à partir des propriétés RowCount et ColumnCount.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.ResetAllValuesToDefault">
            <summary>
            Initialise toutes les cellules au caractère 0
            </summary>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.Swap(System.Int32,System.Int32)">
            <summary>
            Permute (échange) deux cellules.
            </summary>
            <param name="pIndex1">Index de la première cellule impliquée dans la permutation</param>
            <param name="pIndex2">Index de la deuxième cellule impliquée dans la permutation</param>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.SwapValues(VisualArrays.Address,VisualArrays.Address)">
            <summary>
            Permute (échange) uniquement les valeurs de deux cellules.
            </summary>
            <param name="pAddress1">Adresse de la première cellule impliquée dans la permutation</param>
            <param name="pAddress2">Adresse de la deuxième cellule impliquée dans la permutation</param>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.MixUp">
            <summary>
            Mélange l'ensemble des cellules de la grille de façon aléatoire en effectuant des permutations
            Le nombre de permutations est Length * 2
            </summary>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.MixUp(System.Int32)">
            <summary>
            Mélange l'ensemble des cellules de la grille de façon aléatoire en effectuant des permutations
            </summary>
            <param name="pSwapCount">Nombre de permutations à effectuer pour mélanger les cellules de la grille.</param>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.EndUpdate">
            <summary>
            Reprend la peinture de la grille après qu'elle a été interrompue par la méthode BeginUpdate.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.SendValueChanged(System.Int32,System.Int32,System.Int32,VisualArrays.Address)">
            <summary>
            Déclenche l'événement ValueChanged.
            </summary>
            <param name="pIndex">Index de la cellule où se produit l'événement</param>
            <param name="pRow">Rangée de la cellule où se produit l'événement</param>
            <param name="pColumn">Colonne de la cellule où se produit l'événement</param>
            <param name="pAddress">Adresse de la cellule où se produit l'événement</param>
        </member>
        <member name="F:VisualArrays.VisualValueArray`1.va_disabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="F:VisualArrays.VisualValueArray`1.va_enabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.UpdateCellsBkgVisualElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.VisualValueArray`1.va_specialValueAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la valeur spéciale
            </summary>
        </member>
        <member name="F:VisualArrays.VisualValueArray`1.va_specialValueVisualElement">
            <summary>
            Élément visuel affiché dans le fond des cellules lorsqu'il s'agit de la valeur spéciale.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.#ctor">
            <summary>
            Initialise les champs concernant la partie graphique.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.AcceptBeforeValueChanged(`0)">
            <summary>
            Lance l'événement BeforeValueChanged et récolte un booléen permettant d'annuler la modification
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.GetEnumerator">
            <summary>
            Permet de parcourir séquentiellement toutes les cellules de la grille.
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.ToArray">
            <summary>
                Copie les valeurs du VisualBoolArray vers un nouveau tableau à une dimension.
            </summary>
            <returns>Tableau à une dimension contenant les copies des valeurs du VisualBoolArray</returns>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.To2DArray">
            <summary>
                Copie les valeurs du VisualBoolArray vers un nouveau tableau à 2 dimensions.
            </summary>
            <returns>Tableau à 2 dimensions contenant les copies des valeurs du VisualBoolArray</returns>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.Sort">
            <summary>
                Trie en ordre croissant les valeurs des cellules de la grille.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.ToString">
            <summary>
            Fournit les valeurs de la grille sous la forme d'une chaîne avec les indices soit en 1D ou 2D
            selon la valeur de la propriété AddressView.
            </summary>
            <returns>Liste des valeurs de la grille</returns>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.Clear(System.Int32)">
            <summary>
            Vide le contenu de la cellule dont l'index est fourni en paramètre.
            </summary>
            <param name="pIndex">index de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.Clear(System.Int32,System.Int32)">
            <summary>
            Vide le contenu de la cellule dont la rangée et la colonne sont spécifiées.
            </summary>
            <param name="pRow">rangée de la cellule à vider</param>
            <param name="pColumn">colonne de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="F:VisualArrays.VisualValueArray`1.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualValueArray`1.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualValueArray`1.SelectedValue">
            <summary>
            Obtient la valeur de la cellule sélectionnée
            </summary>
        </member>
        <member name="E:VisualArrays.VisualValueArray`1.ValueChanged">
            <summary>
            Se produit lorsque la valeur d'une ou plusieurs cellules changent.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.VisualValueArray`1.DisabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="P:VisualArrays.VisualValueArray`1.EnabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="P:VisualArrays.VisualValueArray`1.SpecialValueAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la valeur spéciale
            </summary>
        </member>
        <member name="E:VisualArrays.VisualValueArray`1.BeforeValueChanged">
            <summary>
            Se produit juste avant le changement de valeur d'une cellule.
            </summary>
            -------------------------------------------------------------------------------------
        </member>
        <member name="P:VisualArrays.VisualValueArray`1.Item(System.Int32)">
            <summary>
            Obtient ou définit la valeur à l'index spécifié en tenant compte du ModeAdressage.
            </summary>
            <param name="pIndex">index du digit</param>
            <returns>valeur à l'index</returns>
        </member>
        <member name="P:VisualArrays.VisualValueArray`1.Item(System.Int32,System.Int32)">
            <summary>
            Obtient ou définit la valeur d'une cellule en tenant compte du mode d'adressage.
            </summary>
            <param name="pRow">La rangée de la cellule. </param>
            <param name="pColumn">La colonne de la cellule.</param>
            <returns>Le valeur à la coordonnée spécifiée.</returns>
        </member>
        <member name="P:VisualArrays.VisualValueArray`1.Item(VisualArrays.Address)">
            <summary>
            Obtient ou définit la valeur pour la cellule à une adresse donnée
            </summary>
            <param name="pAddress">Adressse de la cellule à manipuler</param>
            <returns>valeur contenue dans la cellule</returns>
        </member>
        <member name="T:VisualArrays.VisualGraphArray`1">
            <summary>
            Cette classe représente les propriétés nécessaire pour afficher des graphiques
            </summary>
        </member>
        <member name="F:VisualArrays.VisualGraphArray`1.va_allowGraphClick">
            <summary>
            Indique si le contrôle permet la saisie d'une valeur directement en cliquant dans la cellule
            </summary>
        </member>
        <member name="M:VisualArrays.VisualGraphArray`1.SetValue(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pIndex"></param>
            <param name="pPixelOffset"></param>
        </member>
        <member name="M:VisualArrays.VisualGraphArray`1.#ctor">
            <summary>
            Initialise les champs concernant la partie graphique.
            </summary>
        </member>
        <member name="F:VisualArrays.VisualGraphArray`1.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualGraphArray`1.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualGraphArray`1.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualGraphArray`1.AllowGraphClick">
            <summary>
            Indique si le contrôle permet la saisie d'une valeur directement en cliquant dans la cellule
            </summary>
        </member>
        <member name="P:VisualArrays.VisualGraphArray`1.GraphAppearance">
            <summary>
            Détermine différents aspects de l'apparence en mode graphique
            </summary>
        </member>
        <member name="T:VisualArrays.CellAppearance">
            <summary>
            Fournit les informations concernant l'apparence du fond d'une cellule
            </summary>
        </member>
        <member name="F:VisualArrays.CellAppearance.m_owner">
            <summary>
            Initialise un BackgroundAppearance object
            </summary>
        </member>
        <member name="M:VisualArrays.CellAppearance.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise un CellAppearance object
            </summary>
            <param name="pOwner">VisualArray propriétaire du CellsAppearance</param>
        </member>
        <member name="F:VisualArrays.CellAppearance.m_imageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="F:VisualArrays.CellAppearance.m_image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.ImageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la cellule en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.Shape">
            <summary>
            Obtient et définit la forme utilisée pour dessiner le fond de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.Image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.PenWidth">
            <summary>
            Obtient et définit la taille du crayon pour dessiner une forme contour.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.Style">
            <summary>
            Obtient et définit le style de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.Border">
            <summary>
            Obtient et définit la taille des bordures autour des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.BackgroundColor">
            <summary>
            Obtient et définit la couleur de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.CellAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.SelectionAppearance">
            <summary>
            Fournit les informations concernant l'apparence de la sélection
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Padding">
            <summary>
            Obtient et définit l'espacement entre la cellule et la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Image">
            <summary>
            Obtient ou définit l'image de fond des cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Style">
            <summary>
            Obtient ou définit le style de fond de la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Shape">
            <summary>
            Obtient ou définit la forme utilisée pour représenter la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.PenWidth">
            <summary>
            Obtient ou définit l'épaisseur du crayon utilisé pour dessiner la forme de la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Color">
            <summary>
            Obtient ou définit la couleur de la forme de la sélection.
            </summary>
        </member>
        <member name="P:VisualArrays.SelectionAppearance.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.Address">
            <summary>
            Représente l'adresse d'une cellule dans une grille sous la forme rangée et colonne.
            </summary>
        </member>
        <member name="F:VisualArrays.Address.Empty">
            <summary>
                Représente une adresse où la valeur int.MinValue est affectée aux propriétés
                Address.Row et Address.Column. 
            </summary>
        </member>
        <member name="M:VisualArrays.Address.op_Inequality(VisualArrays.Address,VisualArrays.Address)">
            <summary>
            Compare deux Adresses. Le résultat spécifie si les valeurs des propriétés 
            Address.Row ou Address.Column des deux adresses sont différentes.
            </summary>
            <param name="left">Adresse à comparer</param>
            <param name="right">Adresse à comparer</param>
            <returns>Si les deux adresses sont différentes</returns>
        </member>
        <member name="M:VisualArrays.Address.op_Equality(VisualArrays.Address,VisualArrays.Address)">
            <summary>
            Compare deux Adresses. Le résultat spécifie si les valeurs des propriétés 
            Address.Row et Address.Column des deux adresses sont égales.
            </summary>
            <param name="left">Adresse à comparer</param>
            <param name="right">Adresse à comparer</param>
            <returns>Si les deux adresses sont identiques</returns>
        </member>
        <member name="M:VisualArrays.Address.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialise l'adresse.
            </summary>
            <param name="pRow">La rangée.</param>
            <param name="pColumn">La colonne.</param>
        </member>
        <member name="M:VisualArrays.Address.Offset(System.Int32,System.Int32)">
            <summary>
            Applique un déplacement à l'adresse selon les valeurs spécifiées
            </summary>
            <param name="pRow">Valeur de l'offset de la rangée</param>
            <param name="pColumn">Valeur de l'offset de la colonne</param>
        </member>
        <member name="M:VisualArrays.Address.ToString">
            <summary>
            Retourne un String qui représente cette adresse
            </summary>
            <returns>Rangée et colonne sous la forme (Row,Column)</returns>
        </member>
        <member name="M:VisualArrays.Address.Equals(System.Object)">
            <summary>
             Spécifie si cette Address contient la même rangée et colonne que le System.Object spécifié.
            </summary>
            <param name="obj">System.Object à tester.</param>
            <returns>true si obj possède la même rangée et colonne que cette Address</returns>
        </member>
        <member name="M:VisualArrays.Address.GetHashCode">
            <summary>
            Retourne un code de hachage pour cette Address
            </summary>
            <returns>Valeur entière qui spécifie une valeur de hachage pour cette Address</returns>
        </member>
        <member name="P:VisualArrays.Address.Row">
            <summary>
            Obtient ou définit la valeur pour la rangée.
            </summary>
        </member>
        <member name="P:VisualArrays.Address.Column">
            <summary>
            Obtient ou définit la valeur pour la colonne.
            </summary>
        </member>
        <member name="T:VisualArrays.AddressConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.AddressConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.AddressConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.AddressConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.AddressConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.AddressConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.AddressConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.ICellDraw">
            <summary>
                Prend en charge le dessin du contenu d'une cellule.
            </summary>
        </member>
        <member name="M:VisualArrays.ICellDraw.DrawCellContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Dessine le contenu d'une cellule.
            </summary>
            <param name="pGraphics">objet graphique où dessiner</param>
            <param name="pCellContentBounds">Contour de la zone de contenu de la cellule</param>
            <param name="pCellBounds">Contour complet de la cellule</param>
            <param name="pEnabled">État de la cellule à dessiner</param>
        </member>
        <member name="M:VisualArrays.ICellDraw.DrawCellDragContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Dessine le contenu d'une cellule pour une opération glisser/déposer
            </summary>
            <param name="pGraphics">objet graphique où dessiner</param>
            <param name="pCellContentBounds">Contour de la zone de contenu de la cellule</param>
            <param name="pCellBounds">Contour complet de la cellule</param>
            <param name="pEnabled">État de la cellule à dessiner</param>
        </member>
        <member name="T:VisualArrays.Cell">
            <summary>
            Représente une cellule d'une VisualArrays
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.LayerUnder">
            <summary>
            Obtient ou définit un VisualElement sur la cellule en dessous de la valeur
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.LayerOver">
            <summary>
            Obtient ou définit le premier élément visuel sur la cellule au dessus de la valeur
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.Background">
            <summary>
            Obtient ou définit le VisualElement utilisé pour dessiner le fond de la cellule
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.ReadOnly">
            <summary>
            Obtient ou définit si la valeur de la cellule peut être modifiée ou non 
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.Selected">
            <summary>
            Obtient ou définit si la cellule est sélectionée ou non 
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.Enabled">
            <summary>
            Obtient ou définit si la cellule est active ou non 
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.Visible">
            <summary>
            Obtient ou définit si la cellule est visible ou non
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.UserContent">
            <summary>
            Obtient ou définit des données utilisateur pour le contenu et l'affichage d'une cellule
            </summary>
        </member>
        <member name="F:VisualArrays.Cell.UserData">
            <summary>
            Obtient ou définit des données utilisateur supplémentaire à associer avec la cellule
            </summary>
        </member>
        <member name="M:VisualArrays.Cell.Reset">
            <summary>
            Remet la cellule dans son état initial
            </summary>
        </member>
        <member name="T:VisualArrays.BorderElement">
            <summary>
            Représente un forme apparaissant sur une cellule d'une grille.
            </summary>
        </member>
        <member name="T:VisualArrays.CellVisualElement">
            <summary>
            Représente un élément visuel apparaissant sur une cellule d'une grille.
            </summary>
        </member>
        <member name="M:VisualArrays.CellVisualElement.#ctor">
            <summary>
            Initialise un élément visuel.
            </summary>
        </member>
        <member name="F:VisualArrays.CellVisualElement.va_zoom">
            <summary>
            Obtient ou définit le facteur d'agrandissement de la représentation de l'élément visuel.
            </summary>
        </member>
        <member name="F:VisualArrays.CellVisualElement.va_margin">
            <summary>
            Obtient ou définit la marge autour de l'élément visuel.
            </summary>
        </member>
        <member name="F:VisualArrays.CellVisualElement.va_alignment">
            <summary>
            Obtient ou définit l'alignement de l'élément sur une cellule.
            </summary>
        </member>
        <member name="M:VisualArrays.CellVisualElement.BoundsFromAlignment(System.Drawing.Rectangle,System.Drawing.Size,System.Drawing.ContentAlignment)">
            <summary>
            Fournit un rectangle permettant d'aligner un élément sur une cellule.
            </summary>
            <param name="pCellBounds">Taille de la cellule sur lequel le Sprite apparaît.</param>
            <param name="pSize">Taille de l'élément à aligner.</param>
            <param name="pAlignment">Alignement.</param>
        </member>
        <member name="M:VisualArrays.CellVisualElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Dessine le Sprite dans le graphique.
            </summary>
            <param name="pGraphics">Graphique dans lequel le Sprite doit se dessiner.</param>
            <param name="pBounds">Zone dans lequel le Sprite doit être dessiné</param>
        </member>
        <member name="P:VisualArrays.CellVisualElement.NextVisualElement">
            <summary>
            Prochain élément visuel à dessiner sur la cellule
            </summary>
        </member>
        <member name="P:VisualArrays.CellVisualElement.Zoom">
            <summary>
            Obtient ou définit le facteur d'agrandissement de la représentation de l'élément visuel.
            </summary>
        </member>
        <member name="P:VisualArrays.CellVisualElement.Margin">
            <summary>
            Obtient ou définit la marge autour de l'élément visuel.
            </summary>
        </member>
        <member name="P:VisualArrays.CellVisualElement.Alignment">
            <summary>
            Obtient ou définit l'alignement de l'élément sur une cellule.
            </summary>
        </member>
        <member name="M:VisualArrays.BorderElement.#ctor">
            <summary>
            Initialise un élément visuel de type bordure.
            </summary>
        </member>
        <member name="M:VisualArrays.BorderElement.#ctor(System.Windows.Forms.Padding,System.Drawing.Color)">
            <summary>
            Initialise un élément visuel de type bordure.
            </summary>
            <param name="pBorder">Taille des bordures</param>
            <param name="pColor">Couleur des bordures</param>
        </member>
        <member name="M:VisualArrays.BorderElement.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.Padding,System.Drawing.Color)">
            <summary>
            Dessine l'élément visuel
            </summary>
            <param name="pGraphics"></param>
            <param name="pBounds">Coutour utilisé pour la bordure</param>
            <param name="pBorder">Taille de chacune des bordures</param>
            <param name="pColor">Couleur de toutes les bordures</param>
        </member>
        <member name="M:VisualArrays.BorderElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Dessine l'élément visuel avec les bordures courantes.
            </summary>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
        </member>
        <member name="P:VisualArrays.BorderElement.Color">
            <summary>
            Obtient ou définit la couleur de la forme.
            </summary>
        </member>
        <member name="P:VisualArrays.BorderElement.Border">
            <summary>
            Obtient ou définit la taille des bordures.
            </summary>
        </member>
        <member name="T:VisualArrays.FillShapeElement">
            <summary>
            Représente un forme apparaissant sur une cellule d'une grille.
            </summary>
        </member>
        <member name="F:VisualArrays.FillShapeElement.va_radius">
            <summary>
            Obtient ou définit radius utilisé lorsque la forme est RoundRect.
            </summary>
        </member>
        <member name="M:VisualArrays.FillShapeElement.#ctor(VisualArrays.enuShape)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Forme de l'élément</param>
        </member>
        <member name="M:VisualArrays.FillShapeElement.#ctor(VisualArrays.enuShape,System.Drawing.Color)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Forme de l'élément</param>
            <param name="pColor">Couleur de la forme</param>
        </member>
        <member name="M:VisualArrays.FillShapeElement.#ctor(VisualArrays.enuShape,System.Drawing.Color,System.Int32)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Forme de l'élément</param>
            <param name="pColor">Couleur de la forme</param>
            <param name="pRadius">Radius utilisé lorsque la forme est RoundRect</param>
        </member>
        <member name="M:VisualArrays.FillShapeElement.#ctor(VisualArrays.enuShape,System.Drawing.Color,System.Int32,System.Drawing.ContentAlignment)">
            <summary>
            Initialise un élément visuel d'une certaine forme et couleur
            </summary>
            <param name="pShape">Forme de l'élément</param>
            <param name="pColor">Couleur de la forme</param>
            <param name="pZoom">Facteur d'aggrandissement de la forme</param>
            <param name="pAlignment">Alignement de la forme</param>
        </member>
        <member name="M:VisualArrays.FillShapeElement.DrawFillShape(VisualArrays.enuShape,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="pShape"></param>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
            <param name="pColor"></param>
            <param name="pAlpha"></param>
            <param name="pRadius"></param>
        </member>
        <member name="M:VisualArrays.FillShapeElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Dessine une forme pleine
            </summary>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
        </member>
        <member name="P:VisualArrays.FillShapeElement.Color">
            <summary>
            Obtient ou définit la couleur de la forme
            </summary>
        </member>
        <member name="P:VisualArrays.FillShapeElement.Shape">
            <summary>
            Obtient ou définit la forme de l'élément
            </summary>
        </member>
        <member name="P:VisualArrays.FillShapeElement.Radius">
            <summary>
            Obtient ou définit radius utilisé lorsque la forme est RoundRect.
            </summary>
        </member>
        <member name="T:VisualArrays.FillShapeSprite">
            <summary>
            Représente un 'Sprite' utilisant une forme pleine
            </summary>
        </member>
        <member name="M:VisualArrays.FillShapeSprite.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.FillShapeSprite.Draw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.FillShapeSprite.DrawAtOrigin(System.Drawing.Graphics)">
            <summary>
            Dessine le Sprite à la coordonnée 0,0 dans le graphics
            </summary>
            <param name="pGraphics">Destination du dessin</param>
        </member>
        <member name="P:VisualArrays.FillShapeSprite.Color">
            <summary>
            Obtient ou définit la couleur de la forme
            </summary>
        </member>
        <member name="P:VisualArrays.FillShapeSprite.Opacity">
            <summary>
            Obtient et définit le niveau d'opacité du Sprite entre 0 et 255.
            </summary>
        </member>
        <member name="P:VisualArrays.FillShapeSprite.Shape">
            <summary>
            Obtient ou définit la forme de l'élément
            </summary>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgs`1">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualArrays
            </summary>
        </member>
        <member name="F:VisualArrays.BeforeValueChangedArgs`1.AcceptValueChanged">
            <summary>
            Indique si la nouvelle valeur doit être acceptée
            </summary>
        </member>
        <member name="F:VisualArrays.BeforeValueChangedArgs`1.NewValue">
            <summary>
            Nouvelle valeur proposée
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgs`1.#ctor(System.Boolean,`0)">
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgsVBA">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualBoolArray
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgsVBA.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initialise un BeforeValueChangedVBA
            </summary>
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgsVCA">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualCharArray
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgsVCA.#ctor(System.Boolean,System.Char)">
            <summary>
            Initialise un BeforeValueChangedVCA
            </summary>
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgsVSA">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualStringArray
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgsVSA.#ctor(System.Boolean,System.String)">
            <summary>
            Initialise un BeforeValueChangedVSA
            </summary>
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgsVDA">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualDecimalArray
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgsVDA.#ctor(System.Boolean,System.Decimal)">
            <summary>
            Initialise un BeforeValueChangedVDA
            </summary>
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.BeforeValueChangedArgsVIA">
            <summary>
            Représente un objet événement qui se produit avant le changement du contenu d'une cellule d'une VisualIntArray
            </summary>
        </member>
        <member name="M:VisualArrays.BeforeValueChangedArgsVIA.#ctor(System.Boolean,System.Int32)">
            <summary>
            Initialise un BeforeValueChangedVIA
            </summary>
            <param name="pAcceptValueChanged">Indique si le changement de valeur est accepté</param>
            <param name="pNewValue">Nouvelle valeur proposée</param>
        </member>
        <member name="T:VisualArrays.RowHeaderEventArgs">
            <summary>
            Fournit les données des événements pour les en-têtes de rangées.
            </summary>
        </member>
        <member name="F:VisualArrays.RowHeaderEventArgs.Row">
            <summary>
            Index de la rangée où se produit l'événement 
            </summary>
        </member>
        <member name="M:VisualArrays.RowHeaderEventArgs.#ctor(System.Int32)">
            <param name="pRow">rangée ou se produit l'événement</param>
        </member>
        <member name="T:VisualArrays.ColumnHeaderEventArgs">
            <summary>
            Fournit les données des événements pour les en-têtes de colonnes.
            </summary>
        </member>
        <member name="F:VisualArrays.ColumnHeaderEventArgs.Column">
            <summary>
            Index de la colonne où se produit l'événement 
            </summary>
        </member>
        <member name="M:VisualArrays.ColumnHeaderEventArgs.#ctor(System.Int32)">
            <param name="pColumn">colonne ou se produit l'événement</param>
        </member>
        <member name="T:VisualArrays.SpriteMouseEventArgs">
            <summary>
            Fournit les données des événements sur la gestion de la souris sur un Sprite
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32,VisualArrays.Sprite)">
            <summary>
             Initialise une nouvelle instance de la classe SpriteMouseEventArgs.
            <param name="pButton">Une des valeurs System.Windows.Forms.MouseButtons indiquant le bouton de la souris sur lequel l'utilisateur a appuyé.</param>
            <param name="pClicks">Le nombre de fois où l'utilisateur a cliqué sur un bouton de la souris.</param>
            <param name="pX">Coordonnée x d'un clic de la souris en pixels.</param>
            <param name="pY">Coordonnée y d'un clic de la souris en pixels.</param>
            <param name="pDelta">Décompte signé du nombre de détentes de rotation de la roulette de la souris.</param>
            <param name="pSprite">Sprite sur lequel l'événement s'est produit</param>
            </summary>
        </member>
        <member name="P:VisualArrays.SpriteMouseEventArgs.Sprite">
            <summary>
            Sprite sur lequel l'événement s'est produit.
            </summary>
        </member>
        <member name="T:VisualArrays.CellEventArgs">
            <summary>
            Fournit les données des événements sur une cellule.
            </summary>
        </member>
        <member name="F:VisualArrays.CellEventArgs.Index">
            <summary>
            Index de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.CellEventArgs.Row">
            <summary>
            Rangée de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.CellEventArgs.Column">
            <summary>
            Colonne de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="M:VisualArrays.CellEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
             Initialise une nouvelle instance de la classe CellEventArgs.
            </summary>
            <param name="pIndex">Index de la cellule où se produit l'événement</param>
            <param name="pRow">Rangée de la cellule où se produit l'événement</param>
            <param name="pColumn">Colonne de la cellule où se produit l'événement</param>
        </member>
        <member name="T:VisualArrays.SpriteEventArgs">
            <summary>
            Fournit les données des événements sur un Sprite.
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteEventArgs.Sprite">
            <summary>
            Sprite sur lequel l'événement s'est produit.
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteEventArgs.#ctor(VisualArrays.Sprite)">
            <summary>
             Initialise une nouvelle instance de la classe SpriteEventArgs.
            </summary>
            <param name="pSprite">Sprite où se produit l'événement</param>
        </member>
        <member name="T:VisualArrays.CellMouseEventArgs1D">
            <summary>
            Fournit les données des événements sur la gestion de la souris sur une cellule
            </summary>
        </member>
        <member name="F:VisualArrays.CellMouseEventArgs1D.Index">
            <summary>
            Index de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="M:VisualArrays.CellMouseEventArgs1D.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Initialise une nouvelle instance de la classe CellMouseEventArgs.
            <param name="pButton">Une des valeurs System.Windows.Forms.MouseButtons indiquant le bouton de la souris sur lequel l'utilisateur a appuyé.</param>
            <param name="pClicks">Le nombre de fois où l'utilisateur a cliqué sur un bouton de la souris.</param>
            <param name="pX">Coordonnée x d'un clic de la souris en pixels.</param>
            <param name="pY">Coordonnée y d'un clic de la souris en pixels.</param>
            <param name="pDelta">Décompte signé du nombre de détentes de rotation de la roulette de la souris.</param>
            <param name="pIndex">Index de la cellule où se produit l'événement</param>
            </summary>
        </member>
        <member name="T:VisualArrays.CellMouseEventArgs">
            <summary>
            Fournit les données des événements sur la gestion de la souris sur une cellule
            </summary>
        </member>
        <member name="F:VisualArrays.CellMouseEventArgs.Address">
            <summary>
            Adresse de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.CellMouseEventArgs.Row">
            <summary>
            Rangée de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.CellMouseEventArgs.Column">
            <summary>
            Colonne de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="M:VisualArrays.CellMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Initialise une nouvelle instance de la classe CellMouseEventArgs.
            <param name="pButton">Une des valeurs System.Windows.Forms.MouseButtons indiquant le bouton de la souris sur lequel l'utilisateur a appuyé.</param>
            <param name="pClicks">Le nombre de fois où l'utilisateur a cliqué sur un bouton de la souris.</param>
            <param name="pX">Coordonnée x d'un clic de la souris en pixels.</param>
            <param name="pY">Coordonnée y d'un clic de la souris en pixels.</param>
            <param name="pDelta">Décompte signé du nombre de détentes de rotation de la roulette de la souris.</param>
            <param name="pIndex">Index de la cellule où se produit l'événement</param>
            <param name="pRow">Rangée de la cellule où se produit l'événement</param>
            <param name="pColumn">Colonne de la cellule où se produit l'événement</param>
            </summary>
        </member>
        <member name="T:VisualArrays.VisualArraysDragEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.VisualArraysDragEventArgs.SourceGridName">
            <summary>
            Nom de la grille source de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.VisualArraysDragEventArgs.SourceIndex">
            <summary>
            Index source de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.VisualArraysDragEventArgs.SourceAddress">
            <summary>
            Adresse source de l'opération glisser-déposer
            </summary>
        </member>
        <member name="M:VisualArrays.VisualArraysDragEventArgs.#ctor(System.String,System.Int32,VisualArrays.Address)">
            <summary>
            Fournit des informations concernant l'opération glisser-déposer
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSourceIndex">Index source de l'opération glisser-déposer</param>
            <param name="pSourceAddress">Adresse source de l'opération glisser-déposer</param>
        </member>
        <member name="T:VisualArrays.CellDragEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.CellDragEventArgs.Cancel">
            <summary>
             true pour annuler l'opération sinon, false.
            </summary>
        </member>
        <member name="M:VisualArrays.CellDragEventArgs.#ctor(System.String,System.Int32,VisualArrays.Address,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSourceIndex">Index source de l'opération glisser-déposer</param>
            <param name="pSourceAddress">Adresse source de l'opération glisser-déposer</param>
            <param name="pCancel">true pour annuler l'opération, false autrement</param>
        </member>
        <member name="T:VisualArrays.SpriteDragEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragEventArgs.SourceGridName">
            <summary>
            Nom de la grille source de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragEventArgs.Sprite">
            <summary>
            Index du Sprite dans la collection des Sprites de la grille source
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragEventArgs.Cancel">
            <summary>
             true pour annuler l'opération sinon, false.
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteDragEventArgs.#ctor(System.String,VisualArrays.Sprite,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSprite">Sprite impliqué dans l'opération glisser-déposer</param>
            <param name="pCancel">true pour annuler l'opération, false autrement</param>
        </member>
        <member name="T:VisualArrays.SpriteDragDropEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer d'un Sprite
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragDropEventArgs.Sprite">
            <summary>
            Sprite source de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragDropEventArgs.DestinationIndex">
            <summary>
            Index destinataire de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragDropEventArgs.DestinationAddress">
            <summary>
            Adresse destinataire de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragDropEventArgs.DestinationPixels">
            <summary>
            Emplacement en pixels du Sprite à l'intérieur de la cellule
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteDragDropEventArgs.#ctor(System.String,VisualArrays.Sprite,System.Int32,VisualArrays.Address,System.Int32,VisualArrays.Address,System.Drawing.Point)">
            <summary>
            Fournit des informations concernant l'opération glisser-déposer pour un Sprite
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSprite">Sprite source de l'opération glisser-déposer</param>
            <param name="pSourceIndex">Index source de l'opération glisser-déposer</param>
            <param name="pSourceAddress">Adresse source de l'opération glisser-déposer</param>
            <param name="pDestinationIndex">Index destinataire de l'opération glisser-déposer</param>
            <param name="pDestinationAddress">Adresse destinataire de l'opération glisser-déposer</param>
            <param name="pDestinationPixels">Emplacement en pixels dans la cellule destinataire de l'opération glisser-déposer</param>
        </member>
        <member name="T:VisualArrays.SpriteOutsideDropEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer d'un Sprite
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteOutsideDropEventArgs.Sprite">
            <summary>
            Sprite source de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteOutsideDropEventArgs.Destination">
            <summary>
            Emplacement en pixels ou le Sprite à été déposé
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteOutsideDropEventArgs.#ctor(System.String,VisualArrays.Sprite,System.Int32,VisualArrays.Address,System.Drawing.Point)">
            <summary>
            Fournit des informations concernant l'opération glisser-déposer pour un Sprite déposé à l'extérieur des cellules
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSprite">Sprite source de l'opération glisser-déposer</param>
            <param name="pSourceIndex">Index source de l'opération glisser-déposer</param>
            <param name="pSourceAddress">Adresse source de l'opération glisser-déposer</param>
            <param name="pDestination">Emplacement en pixels ou le Sprite à été déposé</param>
        </member>
        <member name="T:VisualArrays.SpriteDragOverEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer pour un Sprite
            </summary>
        </member>
        <member name="F:VisualArrays.SpriteDragOverEventArgs.Accepted">
            <summary>
            Indique 
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteDragOverEventArgs.#ctor(System.String,VisualArrays.Sprite,System.Int32,VisualArrays.Address,System.Int32,VisualArrays.Address,System.Drawing.Point)">
            <summary>
            Fournit des informations concernant l'opération glisser-déposer d'un Sprite
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSprite">Sprite source de l'opération glisser-déposer</param>
            <param name="pSourceIndex">Index source de l'opération glisser-déposer</param>
            <param name="pSourceAddress">Adresse source de l'opération glisser-déposer</param>
            <param name="pDestinationIndex">Index destinataire de l'opération glisser-déposer</param>
            <param name="pDestinationAddress">Adresse destinataire de l'opération glisser-déposer</param>
            <param name="pDestinationPixels">Emplacement en pixels du Sprite dans la cellule destinataire de l'opération glisser-déposer</param>
        </member>
        <member name="T:VisualArrays.CellDragDropEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.CellDragDropEventArgs.DestinationIndex">
            <summary>
            Index destinataire de l'opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.CellDragDropEventArgs.DestinationAddress">
            <summary>
            Adresse destinataire de l'opération glisser-déposer
            </summary>
        </member>
        <member name="M:VisualArrays.CellDragDropEventArgs.#ctor(System.String,System.Int32,VisualArrays.Address,System.Int32,VisualArrays.Address)">
            <summary>
            Fournit des informations concernant l'opération glisser-déposer
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSourceIndex">Index source de l'opération glisser-déposer</param>
            <param name="pSourceAddress">Adresse source de l'opération glisser-déposer</param>
            <param name="pDestinationIndex">Index destinataire de l'opération glisser-déposer</param>
            <param name="pDestinationAddress">Adresse destinataire de l'opération glisser-déposer</param>
        </member>
        <member name="T:VisualArrays.CellDragOverEventArgs">
            <summary>
            Objet contenant les informations nécessaires sur l'utilisation d'une opération glisser-déposer
            </summary>
        </member>
        <member name="F:VisualArrays.CellDragOverEventArgs.Accepted">
            <summary>
            Indique 
            </summary>
        </member>
        <member name="M:VisualArrays.CellDragOverEventArgs.#ctor(System.String,System.Int32,VisualArrays.Address,System.Int32,VisualArrays.Address)">
            <summary>
            Fournit des informations concernant l'opération glisser-déposer
            </summary>
            <param name="pSourceGridName">Nom de la grille source de l'opération glisser-déposer</param>
            <param name="pSourceIndex">Index source de l'opération glisser-déposer</param>
            <param name="pSourceAddress">Adresse source de l'opération glisser-déposer</param>
            <param name="pDestinationIndex">Index destinataire de l'opération glisser-déposer</param>
            <param name="pDestinationAddress">Adresse destinataire de l'opération glisser-déposer</param>
        </member>
        <member name="T:VisualArrays.CellVCEventArgs">
            <summary>
            Fournit les données des événements sur une cellule.
            </summary>
        </member>
        <member name="M:VisualArrays.CellVCEventArgs.#ctor(System.Int32)">
            <summary>
            Fournit les données des événements sur une cellule.
            </summary>
            <param name="pIndex">Index du contrôle</param>
        </member>
        <member name="P:VisualArrays.CellVCEventArgs.Index">
            <summary>
            Index du contrôle dont la valeur a changée
            </summary>
        </member>
        <member name="T:VisualArrays.ValueChangedEventArgs">
            <summary>
            Fournit les données d'un événement ValueChanged d'une cellule d'une grille.
            Lorsque la valeur de Index est -1 cela indique le changement de plusieurs valeurs.
            </summary>
        </member>
        <member name="F:VisualArrays.ValueChangedEventArgs.Address">
            <summary>
            Adresse de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.ValueChangedEventArgs.Index">
            <summary>
            Index de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.ValueChangedEventArgs.Row">
            <summary>
            Rangée de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="F:VisualArrays.ValueChangedEventArgs.Column">
            <summary>
            Colonne de la cellule où se produit l'événement 
            </summary>
        </member>
        <member name="M:VisualArrays.ValueChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,VisualArrays.Address)">
            <summary>
             Initialise une nouvelle instance de la classe CellEventArgs.
            </summary>
            <param name="pIndex">Index de la cellule où se produit l'événement</param>
            <param name="pRow">Rangée de la cellule où se produit l'événement</param>
            <param name="pColumn">Colonne de la cellule où se produit l'événement</param>
            <param name="pAddress">Adresse de la cellule où se produit l'événement</param>
        </member>
        <member name="T:VisualArrays.enuBarAlign">
            <summary>
            Alignement d'une barre dans un graphique
            </summary>
        </member>
        <member name="F:VisualArrays.enuBarAlign.Normal">
            <summary>
            Selon l'orientation de gauche à droite et de bas en haut.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBarAlign.Reverse">
            <summary>
            Selon l'orientation de droite à gauche et de haut en bas.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBarAlign.Middle">
            <summary>
            Au milieu de la zone
            </summary>
        </member>
        <member name="T:VisualArrays.enuDirection">
            <summary>
            Quatre directions dans un déplacement en 2 dimensions.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDirection.Left">
            <summary>
            Vers la gauche.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDirection.Top">
            <summary>
            Vers le haut.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDirection.Right">
            <summary>
            Vers la droite.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDirection.Bottom">
            <summary>
            Vers le bas.
            </summary>
        </member>
        <member name="T:VisualArrays.enuCharView">
            <summary>
            Les styles de visualisation pour la VisualCharArray.
            </summary>
        </member>
        <member name="F:VisualArrays.enuCharView.Char">
            <summary>
            Style caractère.
            </summary>
        </member>
        <member name="F:VisualArrays.enuCharView.Code">
            <summary>
            Style code.
            </summary>
        </member>
        <member name="T:VisualArrays.enuStringView">
            <summary>
            Les styles de visualisation pour la VisualStringArray.
            </summary>
        </member>
        <member name="F:VisualArrays.enuStringView.Text">
            <summary>
            Style texte.
            </summary>
        </member>
        <member name="F:VisualArrays.enuStringView.ImageFile">
            <summary>
            Style image.
            </summary>
        </member>
        <member name="T:VisualArrays.enuIntView">
            <summary>
            Les styles de visualisation pour la VisualIntArray.
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.Number">
            <summary>
            Style nombre.
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.NumberFraction">
            <summary>
            Style nombre / maximum
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.Graph">
            <summary>
            Style graphique.
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.Digit">
            <summary>
            Style digit.
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.ImageList">
            <summary>
            Style image.
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.GraphNumber">
            <summary>
            Style image graphique + nombre.
            </summary>
        </member>
        <member name="F:VisualArrays.enuIntView.GraphNumberFraction">
            <summary>
            Style image graphique + nombre / maximum.
            </summary>
        </member>
        <member name="T:VisualArrays.enuDecimalView">
            <summary>
            Les styles de visualisation pour la VisualDecimalArray.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDecimalView.Number">
            <summary>
            Style nombre.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDecimalView.Graph">
            <summary>
            Style graphique.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDecimalView.GraphNumber">
            <summary>
            Style graphique + nombre.
            </summary>
        </member>
        <member name="T:VisualArrays.enuGraphBarStyle">
            <summary>
            Les styles de barres
            </summary>
        </member>
        <member name="F:VisualArrays.enuGraphBarStyle.Image">
            <summary>
            Utilise une image pour dessiner les barres
            </summary>
        </member>
        <member name="F:VisualArrays.enuGraphBarStyle.FillShape">
            <summary>
            Dessiner un rectagle plein
            </summary>
        </member>
        <member name="T:VisualArrays.enuGraphValueStyle">
            <summary>
            Les styles de visualisation pour la valeur du graphique.
            </summary>
        </member>
        <member name="F:VisualArrays.enuGraphValueStyle.None">
            <summary>
            Aucune valeur.
            </summary>
        </member>
        <member name="F:VisualArrays.enuGraphValueStyle.Normal">
            <summary>
            La valeur est affichée normalement.
            </summary>
        </member>
        <member name="F:VisualArrays.enuGraphValueStyle.Pourcent">
            <summary>
            La valeur est affichée avec un symbole %.
            </summary>
        </member>
        <member name="T:VisualArrays.enuBkgStyle">
            <summary>
            Les styles de fond d'une cellule.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBkgStyle.None">
            <summary>
            Pas de fond, la cellule est transparente.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBkgStyle.Border">
            <summary>
            Pas de fond, seulement une bordure.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBkgStyle.FillShape">
            <summary>
            Le fond est dessiné par une forme pleine.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBkgStyle.Shape">
            <summary>
            Le fond est dessiné par une forme contour.
            </summary>
        </member>
        <member name="F:VisualArrays.enuBkgStyle.Image">
            <summary>
            Le fond est dessiné par une image.
            </summary>
        </member>
        <member name="T:VisualArrays.enuStrikeStyle">
            <summary>
            Les styles de trait d'une cellule Enabled false.
            </summary>
        </member>
        <member name="F:VisualArrays.enuStrikeStyle.None">
            <summary>
            Pas de trait.
            </summary>
        </member>
        <member name="F:VisualArrays.enuStrikeStyle.Diagonal">
            <summary>
            Trace une diagonale.
            </summary>
        </member>
        <member name="F:VisualArrays.enuStrikeStyle.Cross">
            <summary>
            Trace une croix.
            </summary>
        </member>
        <member name="F:VisualArrays.enuStrikeStyle.Image">
            <summary>
            Affiche la StrikeImage.
            </summary>
        </member>
        <member name="T:VisualArrays.enuShape">
            <summary>
            Les formes à superposer sur une cellule.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.RoundRect">
            <summary>
            Un rectangle aux coins arrondis
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.Rectangle">
            <summary>
            Un rectangle.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.Ellipse">
            <summary>
            Un ellipse.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleIsoUp">
            <summary>
            Un triangle isocèle vers le haut.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleIsoDown">
            <summary>
            Un triangle isocèle vers le bas.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleIsoRight">
            <summary>
            Un triangle isocèle vers la droite.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleIsoLeft">
            <summary>
            Un triangle isocèle vers la gauche.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleRectBL">
            <summary>
            Un triangle rectangle vers le bas gauche.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleRectBR">
            <summary>
            Un triangle rectangle vers le bas droit.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleRectTL">
            <summary>
            Un triangle rectangle vers le haut gauche.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.TriangleRectTR">
            <summary>
            Un triangle rectangle vers le haut droit.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.Losange">
            <summary>
            Un losange.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.HexagonH">
            <summary>
            Un hexagone horizontal.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.HexagonV">
            <summary>
            Un hexagone vertical.
            </summary>
        </member>
        <member name="F:VisualArrays.enuShape.Parallelogram">
            <summary>
            Un parallélogramme.
            </summary>
        </member>
        <member name="T:VisualArrays.enuSelectionStyle">
            <summary>
            Les styles disponibles pour la sélection.
            </summary>
        </member>
        <member name="F:VisualArrays.enuSelectionStyle.Shape">
            <summary>
            La sélection utilise une forme.
            </summary>
        </member>
        <member name="F:VisualArrays.enuSelectionStyle.Image">
            <summary>
            Le sélection utilise une image.
            </summary>
        </member>
        <member name="T:VisualArrays.enuDragStyle">
            <summary>
            Les styles disponibles pour l'opération glisser/déposer.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDragStyle.FillShape">
            <summary>
            Le destination utilise une forme pleine.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDragStyle.Shape">
            <summary>
            La destination utilise une forme.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDragStyle.Image">
            <summary>
            La destination utilise une image.
            </summary>
        </member>
        <member name="T:VisualArrays.enuHeaderBkgStyle">
            <summary>
            Les styles de fond d'un en-tête.
            </summary>
        </member>
        <member name="F:VisualArrays.enuHeaderBkgStyle.None">
            <summary>
            Pas de fond de cellule, la cellule est transparente.
            </summary>
        </member>
        <member name="F:VisualArrays.enuHeaderBkgStyle.Fill">
            <summary>
            Le fond de la cellule est plein.
            </summary>
        </member>
        <member name="T:VisualArrays.enuResizeMode">
            <summary>
            Les modes de redimentionnement de la grille.
            </summary>
        </member>
        <member name="F:VisualArrays.enuResizeMode.Normal">
            <summary>
            Horizontalement et verticalement.
            </summary>
        </member>
        <member name="F:VisualArrays.enuResizeMode.RowColumn">
            <summary>
            Par ligne et par colonne.
            </summary>
        </member>
        <member name="F:VisualArrays.enuResizeMode.Row">
            <summary>
            Par ligne verticalement.
            </summary>
        </member>
        <member name="F:VisualArrays.enuResizeMode.Column">
            <summary>
            Par colonne horizontalement.
            </summary>
        </member>
        <member name="T:VisualArrays.enuAddressMode">
            <summary>
            Les modes d'interprétation de la valeur d'un index.
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.Column">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.ColumnReverse">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.Reverse">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.ReverseRow">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.ReverseColumn">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.StairsTopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.StairsTopRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.StairsBottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressMode.StairsBottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="T:VisualArrays.enuAddressView">
            <summary>
            Les modes de visualisation des adresses en mode conception.
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressView.None">
            <summary>
            Aucun affichage.
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressView.Mode1D">
            <summary>
            Affichage sous forme d'index.
            </summary>
        </member>
        <member name="F:VisualArrays.enuAddressView.Mode2D">
            <summary>
            Afficahge sous forme de coordonnées.
            </summary>
        </member>
        <member name="T:VisualArrays.enuDataStyle">
            <summary>
            Les styles d'affichage des en-têtes.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDataStyle.Index">
            <summary>
            Avec un index selon la base 0.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDataStyle.IndexBase1">
            <summary>
            Avec un index selon la base 1.
            </summary>
        </member>
        <member name="F:VisualArrays.enuDataStyle.User">
            <summary>
            Avec un texte personalisé.
            </summary>
        </member>
        <member name="T:VisualArrays.enuValueFormat">
            <summary>
            Les différents formats d'affichage d'une valeur décimale.
            </summary>
        </member>
        <member name="F:VisualArrays.enuValueFormat.Standard">
            <summary>
            Affichage standard.
            </summary>
        </member>
        <member name="F:VisualArrays.enuValueFormat.Currency">
            <summary>
            Affichage monétaire avec $
            </summary>
        </member>
        <member name="F:VisualArrays.enuValueFormat.Pourcent">
            <summary>
            Affichage en pourcentage avec %
            </summary>
        </member>
        <member name="T:VisualArrays.ImageSprite">
            <summary>
            Représente un 'Sprite' utilisant une image pour se dessiner
            </summary>
        </member>
        <member name="M:VisualArrays.ImageSprite.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.ImageSprite.m_image">
            <summary>
            Obtient et définit l'image du Sprite.
            </summary>
        </member>
        <member name="M:VisualArrays.ImageSprite.Draw(System.Drawing.Graphics)">
            <summary>
            Dessine un 'Sprite' utilisant une image pour se représenter
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.ImageSprite.DrawAtOrigin(System.Drawing.Graphics)">
            <summary>
            Dessine le Sprite à la coordonnée 0,0 dans le graphics
            </summary>
            <param name="pGraphics">Destination du dessin</param>
        </member>
        <member name="P:VisualArrays.ImageSprite.ImageList">
            <summary>
            Obtient et définit l'ImageList utilisé pour dessiner le Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.ImageSprite.ImageIndex">
            <summary>
            Obtient et définit l'index de l'image utilisée pour dessiner le Sprite
            </summary>
        </member>
        <member name="P:VisualArrays.ImageSprite.Image">
            <summary>
            Obtient et définit l'image du Sprite.
            </summary>
        </member>
        <member name="T:VisualArrays.PlatformInvokeGDI32">
            <summary>
            This class shall keep the GDI32 APIs used in our program.
            </summary>
        </member>
        <member name="F:VisualArrays.PlatformInvokeGDI32.SRCCOPY">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.DeleteDC(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hDc"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.DeleteObject(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hDc"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.BitBlt(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hdcDest"></param>
            <param name="xDest"></param>
            <param name="yDest"></param>
            <param name="wDest"></param>
            <param name="hDest"></param>
            <param name="hdcSource"></param>
            <param name="xSrc"></param>
            <param name="ySrc"></param>
            <param name="RasterOp"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.CreateCompatibleBitmap(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="nWidth"></param>
            <param name="nHeight"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.CreateCompatibleDC(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeGDI32.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hdc"></param>
            <param name="bmp"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.PlatformInvokeUSER32">
            <summary>
            This class shall keep the User32 APIs used in our program.
            </summary>
        </member>
        <member name="F:VisualArrays.PlatformInvokeUSER32.SM_CXSCREEN">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.PlatformInvokeUSER32.SM_CYSCREEN">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.PlatformInvokeUSER32.GetDesktopWindow">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeUSER32.GetDC(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeUSER32.GetSystemMetrics(System.Int32)">
            <summary>
            
            </summary>
            <param name="abc"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeUSER32.GetWindowDC(System.Int32)">
            <summary>
            
            </summary>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.PlatformInvokeUSER32.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="hDc"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.CaptureScreen">
            <summary>
            This class shall keep all the functionality for capturing the desktop.
            </summary>
        </member>
        <member name="M:VisualArrays.CaptureScreen.GetDesktopImage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.SIZE">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.SIZE.cx">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.SIZE.cy">
            <summary>
            
            </summary>
        </member>
        <member name="T:VisualArrays.ShapeSprite">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.ShapeSprite.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.ShapeSprite.Draw(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.ShapeSprite.DrawAtOrigin(System.Drawing.Graphics)">
            <summary>
            Dessine le Sprite à la coordonnée 0,0 dans le graphics
            </summary>
            <param name="pGraphics">Destination du dessin</param>
        </member>
        <member name="P:VisualArrays.ShapeSprite.Color">
            <summary>
            Obtient ou définit la couleur de la forme
            </summary>
        </member>
        <member name="P:VisualArrays.ShapeSprite.Shape">
            <summary>
            Obtient ou définit la forme de l'élément
            </summary>
        </member>
        <member name="P:VisualArrays.ShapeSprite.PenWidth">
            <summary>
            Obtient ou définit la taille du crayon qui dessine la forme.
            </summary>
        </member>
        <member name="T:VisualArrays.SpriteCollection">
            <summary>
            Représente une collection d'objets 'Sprite' qui s'affichent sur une grille.
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteCollection.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise une SpriteCollection
            </summary>
            <param name="pOwner">Grille propriétaire des Sprites</param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.Add(VisualArrays.Sprite)">
            <summary>
            
            </summary>
            <param name="pSprite"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollection.Remove(VisualArrays.Sprite)">
            <summary>
            
            </summary>
            <param name="pSprite"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.Contains(VisualArrays.Sprite)">
            <summary>
            
            </summary>
            <param name="pSprite"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollection.AddRange(VisualArrays.Sprite[])">
            <summary>
            
            </summary>
            <param name="pSprites"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.GetValues">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.BringToFront(VisualArrays.Sprite)">
            <summary>
            Place le 'Sprite' à l'avant plan devant tous les autres Sprites
            </summary>
            <param name="pSprite">Sprite à déplacer à l'avant plan</param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.SendToBack(VisualArrays.Sprite)">
            <summary>
            Place le 'Sprite' au dernier plan derrière tous les autres Sprites
            </summary>
            <param name="pSprite">Sprite à déplacer à l'arrière plan</param>
        </member>
        <member name="M:VisualArrays.SpriteCollection.IndexOf(VisualArrays.Sprite)">
             <summary>
                 Recherche le Sprite spécifié et retourne l'index de base zéro de la première
                 occurrence dans la collection.
             </summary>
             <param name="pSprite">Sprite à localiser dans la collection</param>
             <returns>
                 Index de base zéro de la première occurrence de item dans la collection, s'il existe , sinon -1.
            </returns>
        </member>
        <member name="M:VisualArrays.SpriteCollection.OnClearComplete">
            <summary>
                Exécute des processus personnalisés supplémentaires après l'effacement du
                contenu de l'instance de System.Collections.CollectionBase.
            </summary>
        </member>
        <member name="P:VisualArrays.SpriteCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="pIndex"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.SpriteCollectionEditor">
            <summary>
            Représente un éditeur de collection de 'Sprite'
            </summary>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CanSelectMultipleInstances">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CanRemoveInstance(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CreateCollectionItemType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CreateNewItemTypes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CreateInstance(System.Type)">
            <summary>
            
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.SpriteCollectionEditor.CreateCollectionForm">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.TextSprite">
            <summary>
            Un 'Sprite' utilisant une chaîne pour s'afficher
            </summary>
        </member>
        <member name="F:VisualArrays.TextSprite.m_backgroundStyle">
            <summary>
            Obtient et définit le style de fond du 'Sprite'.
            </summary>
        </member>
        <member name="M:VisualArrays.TextSprite.#ctor">
            <summary>
            Initialise un 'TextSprite'
            </summary>
        </member>
        <member name="M:VisualArrays.TextSprite.Draw(System.Drawing.Graphics)">
            <summary>
            Dessine le fond ainsi que le texte du 'Sprite'
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.TextSprite.DrawAtOrigin(System.Drawing.Graphics)">
            <summary>
            Dessine le Sprite à la coordonnée 0,0 dans le graphics
            </summary>
            <param name="pGraphics">Destination du dessin</param>
        </member>
        <member name="M:VisualArrays.TextSprite.RecalcBounds">
            <summary>
            Calcul le rectangle contour du Sprite en fonction de son alignement et de son DisplayIndex
            </summary>
        </member>
        <member name="P:VisualArrays.TextSprite.Text">
            <summary>
            Obtient ou définit le texte du 'Sprite'.
            </summary>
        </member>
        <member name="P:VisualArrays.TextSprite.TextColor">
            <summary>
            Obtient ou définit la couleur du texte du 'Sprite'
            </summary>
        </member>
        <member name="P:VisualArrays.TextSprite.Font">
            <summary>
            Obtient ou définit la police utilisée par l'élément. 
            </summary>
        </member>
        <member name="P:VisualArrays.TextSprite.ShapeColor">
            <summary>
            Obtient ou définit la couleur de la forme
            </summary>
        </member>
        <member name="P:VisualArrays.TextSprite.BackgroundStyle">
            <summary>
            Obtient et définit le style de fond du 'Sprite'.
            </summary>
        </member>
        <member name="P:VisualArrays.TextSprite.BackgroundShape">
            <summary>
            Obtient ou définit la forme du fond du 'Sprite'
            </summary>
        </member>
        <member name="P:VisualArrays.TextSprite.Radius">
            <summary>
            Obtient et définit le radius utilisé lorsque enuShape est RoundRect.
            </summary>
        </member>
        <member name="P:VisualArrays.TextSprite.Opacity">
            <summary>
            Obtient et définit le niveau d'opacité du Sprite entre 0 et 255.
            </summary>
        </member>
        <member name="P:VisualArrays.TextSprite.Margin">
            <summary>
            Obtient et définit l'espacement externe entre le texte et le fond.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualCharArray">
            <summary>
            Représente une grille dont les cellules sont caractères.  
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCharArray.#ctor">
            <summary>
            Instancie une grille visuelle de caractères.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCharArray.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque le MouseWheel change de valeur
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualCharArray.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Accepte tous les caractères saisies au clavier
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualCharArray.DrawCellDragContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Dessiner le contenu d'une cellule dans une zone de la taille de la cellule, 
            servant à l'opération glisser/déposer.
            </summary>
            <param name="pGraphics"></param>
            <param name="pContentBounds">Contour du contenu de la cellule</param>
            <param name="pRow">Rangée</param>
            <param name="pColumn">Colonne</param>
        </member>
        <member name="M:VisualArrays.VisualCharArray.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la cellule à l'adresse pRow et pColumn.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="M:VisualArrays.VisualCharArray.RandomValue(System.Char,System.Char)">
            <summary>
            Génère un caractère aléatoire.
            </summary>
            <param name="pMin">Borne inférieure inclue dans l'intervalle</param>
            <param name="pMax">Borne supérieure inclue dans l'intervalle</param>
            <returns>Un caractère aléatoire entre pMin et pMax</returns>
        </member>
        <member name="F:VisualArrays.VisualCharArray.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCharArray.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualCharArray.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCharArray.DefaultValue">
            <summary>
            Obtient ou définit la valeur par défaut de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCharArray.SpecialValue">
            <summary>
            Obtient ou définit la valeur spéciale à afficher différement des autres valeurs.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCharArray.View">
            <summary>
            Obtient et définit le style de visualisation pour les valeurs de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCharArray.ImlBaseChar">
            <summary>
            Obtient ou définit le caractère de base pour l'indéxation des images en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCharArray.AutoNextIndex">
            <summary>
            Obtient ou définit si la saisie d'un caractère nous augmente la SelectedIndex
            </summary>
        </member>
        <member name="T:VisualArrays.VisualIntArray">
            <summary>
            Représente une grille permettant l'affichage par segments de chiffres ou de symboles.  
            </summary>
        </member>
        <member name="M:VisualArrays.VisualIntArray.#ctor">
            <summary>
            Initialise une nouvelle instance de la grille avec les valeurs par défaut.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualIntArray.Clear(System.Int32)">
            <summary>
            Vide le contenu de la cellule dont l'index est fournit en paramètre.
            </summary>
            <param name="pIndex">index de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualIntArray.Clear(System.Int32,System.Int32)">
            <summary>
            Vide le contenu de la cellule dont la rangée et la colonne sont spécifiées.
            </summary>
            <param name="pRow">rangée de la cellule à vider</param>
            <param name="pColumn">colonne de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualIntArray.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque le MouseWheel change de valeur
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualIntArray.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Accepte les touches 0 à 9 pour la saisie de nombres.
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualIntArray.DrawCellDragContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Dessiner le contenu d'une cellule dans une zone de la taille de la cellule, 
            servant à l'opération glisser/déposer.
            </summary>
            <param name="pGraphics"></param>
            <param name="pContentBounds">Contour du contenu de la cellule</param>
            <param name="pRow">Rangée</param>
            <param name="pColumn">Colonne</param>
        </member>
        <member name="M:VisualArrays.VisualIntArray.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la cellule à l'adresse pRow et pColumn.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="M:VisualArrays.VisualIntArray.RandomValue">
            <summary>
            Génère un nombre aléatoire entier, choisi entre les valeurs des propriétés 'Minimum' et 'Maximum' 
            inclusivement.
            </summary>
            <returns>Un nombre aléatoire entier entre 'Minimum' et 'Maximum' inclusivement</returns>
        </member>
        <member name="M:VisualArrays.VisualIntArray.RandomValue(System.Int32,System.Int32)">
            <summary>
            Génère un nombre entier aléatoire.
            </summary>
            <param name="pMin">Borne inférieure inclue dans l'intervalle</param>
            <param name="pMax">Borne supérieure inclue dans l'intervalle</param>
            <returns>Un nombre aléatoire entier entre pMin et pMax</returns>
        </member>
        <member name="F:VisualArrays.VisualIntArray.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualIntArray.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualIntArray.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.DefaultValue">
            <summary>
            Obtient ou définit la valeur par défaut de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.SpecialValue">
            <summary>
            Obtient ou définit la valeur spéciale à afficher différement des autres valeurs.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.DigitColor">
            <summary>
            Obtient et définit la couleur des segments allumés.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.Minimum">
            <summary>
            Obtient et définit la valeur minimale pour toutes les cellules de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.Maximum">
            <summary>
            Obtient ou définit la valeur maximale pour toutes les cellules de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.View">
            <summary>
            Obtient et définit le style de visualisation pour les valeurs de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualIntArray.Item(System.Int32)">
            <summary>
            Obtient ou définit le digit à l'index spécifié en tenant compte du ModeAdressage.
            </summary>
            <param name="pIndex">index du digit</param>
            <returns></returns>
        </member>
        <member name="P:VisualArrays.VisualIntArray.Item(System.Int32,System.Int32)">
            <summary>
            Obtient ou définit le nombre à la cellule dont la ligne et la colonne 
            sont spécifiées en tenant compte du mode d'adressage.
            </summary>
            <param name="pRow">rangée de la cellule à traiter</param>
            <param name="pColumn">colonne de la cellule à traiter</param>
            <returns>nombre à la coordonnée spécifié</returns>
        </member>
        <member name="T:VisualArrays.VisualBoolArray">
            <summary>
            Représente une grille dont les cellules sont true ou false.  
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.#ctor">
            <summary>
            Instancie une grille lumineuse; les cellules sont booléennes, soit allumées ou éteintes.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.DrawCellDragContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Dessiner le contenu d'une cellule dans une zone de la taille de la cellule, 
            servant à l'opération glisser/déposer.
            </summary>
            <param name="pGraphics"></param>
            <param name="pContentBounds">Contour du contenu de la cellule</param>
            <param name="pRow">Rangée</param>
            <param name="pColumn">Colonne</param>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la cellule à l'adresse pRow et pColumn.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque le MouseWheel change de valeur
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Accepte tous les caractères saisies au clavier
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.RandomValue">
            ----------------------------------------------------------------------------------
            <summary>
            Génère aléatoirement la valeur true ou false.
            </summary>
            <returns>True ou false.</returns>
        </member>
        <member name="F:VisualArrays.VisualBoolArray.va_specialValueAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la valeur spéciale
            </summary>
        </member>
        <member name="F:VisualArrays.VisualBoolArray.va_enabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="F:VisualArrays.VisualBoolArray.va_disabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="F:VisualArrays.VisualBoolArray.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualBoolArray.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.DefaultValue">
            <summary>
            Obtient ou définit la valeur par défaut de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.SpecialValue">
            <summary>
            Obtient ou définit la valeur spéciale à afficher différement des autres valeurs.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.SpecialValueAppearance">
            <summary>
            Détermine différents aspects de l'apparence de la valeur spéciale
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.EnabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est true
            </summary>
        </member>
        <member name="P:VisualArrays.VisualBoolArray.DisabledAppearance">
            <summary>
            Détermine différents aspects de l'apparence d'une cellule dont l'état Enabled est false
            </summary>
        </member>
        <member name="T:VisualArrays.VisualArrayException">
            <summary>
            Définit une exception pour les débordements d'index de ligne ou de colonne.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualArrayException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="pMessage"></param>
        </member>
        <member name="T:VisualArrays.VisualDecimalArray">
            <summary>
            Représente une grille permettant l'affichage de nombres  
            </summary>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.#ctor">
            <summary>
            Initialise une nouvelle instance de la grille de digits avec les valeurs par défaut.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque le MouseWheel change de valeur
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Accepte les touches 0 à 9 pour la saisie de nombres.
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.OnMouseEnter(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.OnMouseLeave(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la cellule à l'adresse pRow et pColumn.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.Clear(System.Int32)">
            <summary>
            Vide le contenu de la cellule dont l'index est fournit en paramètre.
            </summary>
            <param name="pIndex">index de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.Clear(System.Int32,System.Int32)">
            <summary>
            Vide le contenu de la cellule dont la rangée et la colonne sont spécifiées.
            </summary>
            <param name="pRow">rangée de la cellule à vider</param>
            <param name="pColumn">colonne de la cellule à vider</param>
            ----------------------------------------------------------------------------------
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.RandomValue">
            <summary>
            Génère un nombre aléatoire décimal, choisi entre les valeurs des propriétés 'Minimum' et 'Maximum' 
            inclusivement.
            </summary>
            <returns>Un nombre aléatoire décimal entre 'Minimum' et 'Maximum' inclusivement</returns>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.RandomValue(System.Decimal,System.Decimal)">
            <summary>
            Génère un nombre décimal aléatoire.
            </summary>
            <param name="pMin">Borne inférieure inclue dans l'intervalle</param>
            <param name="pMax">Borne supérieure inclue dans l'intervalle</param>
            <returns>Un nombre aléatoire décimal entre pMin et pMax</returns>
        </member>
        <member name="F:VisualArrays.VisualDecimalArray.components">
            <summary> 
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.Dispose(System.Boolean)">
            <summary> 
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualDecimalArray.InitializeComponent">
            <summary> 
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.DefaultValue">
            <summary>
            Obtient ou définit la valeur par défaut de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.SpecialValue">
            <summary>
            Obtient ou définit la valeur spéciale à afficher différement des autres valeurs.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.View">
            <summary>
            Obtient et définit le style de visualisation pour les valeurs de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.Minimum">
            <summary>
            Obtient et définit la valeur minimale pour toutes les cellules de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.Maximum">
            <summary>
            Obtient ou définit la valeur maximale pour toutes les cellules de la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.ValueFormat">
            <summary>
            Obtient et définit le format d'affichage des valeurs dans la grille
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.DecimalPlaces">
            <summary>
            Obtient ou définit le nombre de décimales à afficher.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.Item(System.Int32)">
            <summary>
            Obtient ou définit le nombre à l'index spécifié en tenant compte du ModeAdressage.
            </summary>
            <param name="pIndex">index du digit</param>
            <returns>nombre à l'index spécifié</returns>
        </member>
        <member name="P:VisualArrays.VisualDecimalArray.Item(System.Int32,System.Int32)">
            <summary>
            Obtient ou définit le nombre à la cellule dont la ligne et la colonne 
            sont spécifiées en tenant compte du mode d'adressage.
            </summary>
            <param name="pRow">rangée de la cellule à traiter</param>
            <param name="pColumn">colonne de la cellule à traiter</param>
            <returns>nombre à la coordonnée spécifié</returns>
        </member>
        <member name="T:VisualArrays.HeaderArray">
            <summary>
            Représente un tableau de chaînes affichant les en-têtes d'une grille.
            </summary>
        </member>
        <member name="M:VisualArrays.HeaderArray.GetEnumerator">
            <summary>
            Supporte une simple itération sur le tableau en-têtes.
            </summary>
            <returns>Un objet de type 'Sprite'.</returns>
        </member>
        <member name="M:VisualArrays.HeaderArray.#ctor(VisualArrays.BaseGrid,System.Int32,System.Boolean)">
            <summary>
            Initialise une collection d'objets 'Sprite'.
            </summary>
            <param name="pOwner">Propriétaire du tableau des en-têtes.</param>
            <param name="pSize">Taille du tableau.</param>
            <param name="pColumn">Une en-tête de colonne ou non.</param>
        </member>
        <member name="P:VisualArrays.HeaderArray.Length">
            <summary>
            Fournit la taille du tableau des en-têtes.
            </summary>
        </member>
        <member name="P:VisualArrays.HeaderArray.Item(System.Int32)">
            <summary>
            Obtient ou définit le texte à l'index spécifié dans le tableau des en-têtes.
            </summary>
            <param name="pIndex"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.ImageElement">
            <summary>
            Représente un élément visuel affichant une image.
            </summary>
        </member>
        <member name="M:VisualArrays.ImageElement.#ctor(System.Drawing.Image)">
            <summary>
            Initialise un élément visuel affichant une image.
            </summary>
            <param name="pImage">Image à utiliser.</param>
        </member>
        <member name="M:VisualArrays.ImageElement.#ctor(System.Drawing.Image,System.Int32)">
            <summary>
            Initialise un élément visuel affichant une image.
            </summary>
            <param name="pImage">Image à utiliser.</param>
            <param name="pZoom">Facteur d'agrandissement de l'image.</param>
        </member>
        <member name="M:VisualArrays.ImageElement.#ctor(System.Drawing.Image,System.Int32,System.Drawing.ContentAlignment)">
            <summary>
            Initialise un élément visuel affichant une image.
            </summary>
            <param name="pImage">Image à utiliser.</param>
            <param name="pZoom">Facteur d'agrandissement de l'image.</param>
            <param name="pAlignment">Alignement de l'élément visuel.</param>
        </member>
        <member name="M:VisualArrays.ImageElement.#ctor(System.String,System.Int32,System.Drawing.ContentAlignment)">
            <summary>
            Initialise un élément visuel affichant une image.
            </summary>
            <param name="pImageFileName">`Nom du fichier contenant l'image.</param>
            <param name="pZoom">Facteur d'aggrandissement de l'image.</param>
            <param name="pAlignment">Alignement de l'élément visuel.</param>
        </member>
        <member name="M:VisualArrays.ImageElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Dessine l'élément visuel avec l'image courante.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pBounds"></param>
        </member>
        <member name="P:VisualArrays.ImageElement.Image">
            <summary>
            Obtient ou définit l'image associée avec l'ImageElement.
            </summary>
        </member>
        <member name="T:VisualArrays.ISelectable">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.ISelectable.SelectedIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.ISelectable.SelectionMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.ISelectable.SelectionSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.ISelectable.SelectionOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.ISelectable.SelectionColor">
            <summary>
            
            </summary>
        </member>
        <member name="E:VisualArrays.ISelectable.SelectedIndexChanged">
            <summary>
            
            </summary>
        </member>
        <member name="T:VisualArrays.Properties.Resources">
            <summary>
              Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
            </summary>
        </member>
        <member name="P:VisualArrays.Properties.Resources.ResourceManager">
            <summary>
              Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
            </summary>
        </member>
        <member name="P:VisualArrays.Properties.Resources.Culture">
            <summary>
              Remplace la propriété CurrentUICulture du thread actuel pour toutes
              les recherches de ressources à l'aide de cette classe de ressource fortement typée.
            </summary>
        </member>
        <member name="T:VisualArrays.SelectedIndexCollection">
            <summary>
            Représente une collection d'index d'éléments sélectionnés dans une grille.
            </summary>
        </member>
        <member name="M:VisualArrays.SelectedIndexCollection.#ctor(VisualArrays.BaseGrid)">
            <summary>
            Initialise une collection d'index.
            </summary>
            <param name="pOwner">Propriétaire de la collection.</param>
        </member>
        <member name="M:VisualArrays.SelectedIndexCollection.Remove(System.Int32)">
            <summary>
            Supprimer l'index spécifié de la collection.
            </summary>
            <param name="pIndex">Index de la collection.</param>
        </member>
        <member name="M:VisualArrays.SelectedIndexCollection.GetEnumerator">
            <summary>
            Supporte une simple itération sur la collection d'indices.
            </summary>
            <returns>Un index.</returns>
        </member>
        <member name="M:VisualArrays.SelectedIndexCollection.Clear">
            <summary>
            Supprime tous les indexd e la collection.
            </summary>
        </member>
        <member name="M:VisualArrays.SelectedIndexCollection.Contains(System.Int32)">
            <summary>
            Détermine si l'index réside dans la collection.
            </summary>
            <param name="pIndex">Index à localiser.</param>
            <returns>True si l'index est localisé, false sinon.</returns>
        </member>
        <member name="P:VisualArrays.SelectedIndexCollection.Count">
            <summary>
            Obtient le nombre d'éléments de la collection.
            </summary>
        </member>
        <member name="T:VisualArrays.ShapeElement">
            <summary>
            Représente un forme apparaissant sur une cellule d'une grille.
            </summary>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Une forme.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape,System.Int32)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Une forme.</param>
            <param name="pPenWidth">Taille du crayon qui dessine la forme.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape,System.Int32,System.Int32)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Une forme.</param>
            <param name="pPenWidth">Taille du crayon qui dessine la forme.</param>
            <param name="pRadius">Radius utilisé lorsque la forme est RoundRect.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape,System.Drawing.ContentAlignment)">
            <summary>
            Initialise un élément visuel d'une certaine forme.
            </summary>
            <param name="pShape">Une forme.</param>
            <param name="pAlignment">Un alignement.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape,System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
            Initialise un élément visuel d'une certaine forme et couleur.
            </summary>
            <param name="pShape">Une forme.</param>
            <param name="pPenWidth">Taille du crayon qui dessine la forme.</param>
            <param name="pColor">Couleur du crayon qui dessine la forme.</param>
            <param name="pRadius">Radius utilisé lorsque la forme est RoundRect.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.#ctor(VisualArrays.enuShape,System.Int32,System.Drawing.Color,System.Int32,System.Drawing.ContentAlignment)">
            <summary>
            Initialise un élément visuel d'une certaine forme et couleur.
            </summary>
            <param name="pShape">Une forme.</param>
            <param name="pPenWidth">Taille du crayon qui dessine la forme.</param>
            <param name="pColor">Couleur du crayon qui dessine la forme.</param>
            <param name="pZoom">Facteur d'aggrandissement de la forme en poucentage.</param>
            <param name="pAlignment">Un alignement.</param>
        </member>
        <member name="M:VisualArrays.ShapeElement.DrawShape(VisualArrays.enuShape,System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Int32)">
            <summary>
            
            </summary>
            <param name="pShape"></param>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
            <param name="pPen"></param>
            <param name="pRadius"></param>
        </member>
        <member name="M:VisualArrays.ShapeElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Dessine l'élément visuel selon la forme courante.
            </summary>
            <param name="pGraphics"></param>
            <param name="pBounds"></param>
        </member>
        <member name="P:VisualArrays.ShapeElement.Radius">
            <summary>
            Obtient ou définit le radius utilisé lorsque la forme est RoundRect.
            </summary>
        </member>
        <member name="P:VisualArrays.ShapeElement.Color">
            <summary>
            Obtient ou définit la couleur de la forme.
            </summary>
        </member>
        <member name="P:VisualArrays.ShapeElement.Shape">
            <summary>
            Obtient ou définit la forme de l'élément.
            </summary>
        </member>
        <member name="P:VisualArrays.ShapeElement.PenWidth">
            <summary>
            Obtient ou définit la taille du crayon qui dessine la forme.
            </summary>
        </member>
        <member name="T:VisualArrays.TextElement">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.TextElement.#ctor(System.Drawing.Font,System.String)">
            <summary>
            Initialise un élément affichant du texte.
            </summary>
            <param name="pFont">Une police.</param>
            <param name="pText">Le texte.</param>
        </member>
        <member name="M:VisualArrays.TextElement.#ctor(System.Drawing.Font,System.String,System.Drawing.Color)">
            <summary>
            Initialise un élément affichant du texte.
            </summary>
            <param name="pFont">Police utilsée pour dessiner le texte</param>
            <param name="pText">Texte à afficher</param>
            <param name="pColor">Couleur du texte</param>
        </member>
        <member name="M:VisualArrays.TextElement.#ctor(System.Drawing.Font,System.String,System.Drawing.Color,System.Drawing.ContentAlignment,System.Windows.Forms.Padding)">
            <summary>
            Initialise un élément affichant du texte.
            </summary>
            <param name="pFont">Une police.</param>
            <param name="pText">Le texte.</param>
            <param name="pColor">Une couleur.</param>
            <param name="pAlignment">Un alignement.</param>
            <param name="pMargin">Marge autour du texte</param>
        </member>
        <member name="M:VisualArrays.TextElement.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            -------------------------------------------------------------------------------------
             <summary>
             Dessine le texte de l'élément.
             </summary>
             <param name="pGraphics">Graphique dans lequel le texte est dessiné.</param>
             <param name="pBounds">Rectangle dans lequel le texte doit être dessiné</param>
        </member>
        <member name="M:VisualArrays.TextElement.ToString">
            <summary>
            Fournit le texte de l'élément
            </summary>
            <returns></returns>
        </member>
        <member name="P:VisualArrays.TextElement.Text">
            <summary>
            Obtient ou définit le texte d'un élément.
            </summary>
        </member>
        <member name="P:VisualArrays.TextElement.Color">
            <summary>
            Obtient ou définit la couleur du texte à afficher.
            </summary>
        </member>
        <member name="P:VisualArrays.TextElement.Font">
            <summary>
            Obtient ou définit la police utilisée par l'élément. 
            </summary>
        </member>
        <member name="T:VisualArrays.VisualStringArray">
            <summary>
            Représente une grille dont les cellules sont chaînes de caractères.  
            </summary>
        </member>
        <member name="M:VisualArrays.VisualStringArray.#ctor">
            <summary>
            Instancie une grille visuelle de caractères.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualStringArray.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Accepte tous les caractères saisies au clavier jsuqu'à concurrence de MaxLength
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualStringArray.DrawCellDragContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Dessiner le contenu d'une cellule dans une zone de la taille de la cellule, 
            servant à l'opération glisser/déposer.
            </summary>
            <param name="pGraphics"></param>
            <param name="pContentBounds">Contour du contenu de la cellule</param>
            <param name="pRow">Rangée</param>
            <param name="pColumn">Colonne</param>
        </member>
        <member name="M:VisualArrays.VisualStringArray.DrawCellContent(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Dessine la cellule à l'adresse pRow et pColumn.
            </summary>
            <param name="pGraphics">Objet graphique où dessiner.</param>
            <param name="pRow">Rangée.</param>
            <param name="pColumn">Colonne.</param>
        </member>
        <member name="F:VisualArrays.VisualStringArray.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualStringArray.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualStringArray.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualStringArray.DefaultValue">
            <summary>
            Obtient ou définit la valeur par défaut de toutes les cellules.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualStringArray.SpecialValue">
            <summary>
            Obtient ou définit la valeur spéciale à afficher différement des autres valeurs.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualStringArray.MaxLength">
            <summary>
            Obtient ou définit le nombre maximum de caractères que l'on peut saisir dans les cellules
            </summary>
        </member>
        <member name="P:VisualArrays.VisualStringArray.View">
            <summary>
            Obtient et définit le style de visualisation pour les valeurs de la grille
            </summary>
        </member>
        <member name="T:VisualArrays.VoidData">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.VoidData.#ctor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="pX"></param>
            <param name="pY"></param>
            <param name="pColor"></param>
        </member>
        <member name="M:VisualArrays.VoidData.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:VisualArrays.VoidData.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.VoidData.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:VisualArrays.VoidData.Color">
            <summary>
            
            </summary>
        </member>
        <member name="T:VisualArrays.VoidDataConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:VisualArrays.VoidDataConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="T:VisualArrays.VisualCells.VisualBool">
            <summary>
            Représente une cellule booléenne. 
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualBool.#ctor">
            <summary>
            Initialise un contrôle VisualBool
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualBool.m_foreGroundVE">
            <summary>
            VisualElement utilisé pour dessiner le fond de la cellule
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualBool.va_valueAppearance">
            <summary>
            Détermine différents aspects de l'apparence selon la valeur de la propriété Value
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualBool.DrawContent(System.Drawing.Graphics)">
            <summary>
            
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualBool.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualBool.RandomizeValue">
            <summary>
            Assigne une valeur aléatoire à la propriété Value dans l'intervalle : Minimum à Maximum
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualBool.UpdateVisualElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualBool.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualBool.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualBool.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="E:VisualArrays.VisualCells.VisualBool.ValueChanged">
            <summary>
            Se produit lorsque la valeur du contrôle change
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualBool.ValueAppearance">
            <summary>
            Détermine différents aspects de l'apparence selon la valeur de la propriété Value
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualBool.Toggle">
            <summary>
            Détermine si un click sur le contrôle provoque une inversion de son état.
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualBool.Value">
            <summary>
            La valeur actuelle du contrôle VisualBool.
            </summary>
        </member>
        <member name="T:VisualArrays.VisualCells.VisualInt">
            <summary>
            Représente une cellule contenant un nombre entier. 
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.#ctor">
            <summary>
            Initialise un contrôle VisualInt
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.DrawContent(System.Drawing.Graphics)">
            <summary>
            Dessine le contenu du contrôle.
            </summary>
            <param name="pGraphics"></param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.OnEnabledChanged(System.EventArgs)">
            <summary>
            Se produit lorsque l'utilisateur change l'état du contrôle
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque l'utilisateur click sur le contrôle
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Se produit lorsque le MouseWheel change de valeur
            </summary>
            <param name="e">MouseEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Accepte les touches "flèches"
            </summary>
            <param name="e">infos sur la touche pressée</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Gère la saisie d'un nombre entier
            </summary>
            <param name="e">KeyPressEventArgs</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.RandomizeValue">
            <summary>
            Assigne une valeur aléatoire à la propriété Value dans l'intervalle : Minimum à Maximum
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.RandomizeValue(System.Int32,System.Int32)">
            <summary>
            Assigne une valeur aléatoire à la propriété Value.
            </summary>
            <param name="pMinimum">borne inférieure de l'intervalle</param>
            <param name="pMaximum">borne supérieure de l'intervalle</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.UpdateVisualElement">
            <summary>
            
            </summary>
        </member>
        <member name="F:VisualArrays.VisualCells.VisualInt.components">
            <summary>
            Variable nécessaire au concepteur.
            </summary>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.Dispose(System.Boolean)">
            <summary>
            Nettoyage des ressources utilisées.
            </summary>
            <param name="disposing">true si les ressources managées doivent être supprimées ; sinon, false.</param>
        </member>
        <member name="M:VisualArrays.VisualCells.VisualInt.InitializeComponent">
            <summary>
            Méthode requise pour la prise en charge du concepteur - ne modifiez pas 
            le contenu de cette méthode avec l'éditeur de code.
            </summary>
        </member>
        <member name="E:VisualArrays.VisualCells.VisualInt.ValueChanged">
            <summary>
            Se produit lorsque la valeur du contrôle change
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualInt.ImageList">
            <summary>
            Obtient ou définit l'ImageList utilisée pour dessiner la valeur en mode View ImageList
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualInt.View">
            <summary>
            Obtient et définit le style de visualisation la valeur du contrôle
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualInt.Minimum">
            <summary>
            Obtient et définit la valeur minimale pour la propriété Value
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualInt.Maximum">
            <summary>
            Obtient ou définit la valeur maximale pour la propriété Value
            </summary>
        </member>
        <member name="P:VisualArrays.VisualCells.VisualInt.Value">
            <summary>
            La valeur actuelle du contrôle VisualInt
            </summary>
        </member>
    </members>
</doc>
